<!doctype html>
<html lang="zh" data-hairline="true" class="itcauecng" data-theme="light"><head><meta charSet="utf-8"/><title data-rh="true">C++17剖析：string_view的实现，以及性能 - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="renderer" content="webkit"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><meta data-rh="true" name="keywords" content="C / C++,C++"/><meta data-rh="true" name="description" content="主要内容C++17标准发布，string_view是标准新增的内容。这篇文章主要分析string_view的适用范围、注意事项，并分析string_view带来的性能提升，最后从gcc 8.2的libstdc++库源码级别分析性能提升的原因。 背景知识…"/><meta data-rh="true" property="og:title" content="C++17剖析：string_view的实现，以及性能"/><meta data-rh="true" property="og:url" content="https://zhuanlan.zhihu.com/p/166359481"/><meta data-rh="true" property="og:description" content="主要内容C++17标准发布，string_view是标准新增的内容。这篇文章主要分析string_view的适用范围、注意事项，并分析string_view带来的性能提升，最后从gcc 8.2的libstdc++库源码级别分析性能提升的原因。 背景知识…"/><meta data-rh="true" property="og:image" content="https://picx.zhimg.com/v2-1ebdadcffde0d9a120919841a37b483b_720w.jpg?source=172ae18b"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="og:site_name" content="知乎专栏"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png" sizes="152x152"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.d5793cac.png" sizes="120x120"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7abf3393.png" sizes="76x76"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.362a8eac.png" sizes="60x60"/><link crossorigin="" rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/heifetz/favicon.ico"/><link crossorigin="" rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/heifetz/search.xml" title="知乎"/><link rel="dns-prefetch" href="//static.zhimg.com"/><link rel="dns-prefetch" href="//pica.zhimg.com"/><link rel="dns-prefetch" href="//picx.zhimg.com"/><link rel="dns-prefetch" href="//pic1.zhimg.com"/><link rel="dns-prefetch" href="//pic2.zhimg.com"/><link rel="dns-prefetch" href="//pic3.zhimg.com"/><link rel="dns-prefetch" href="//pic4.zhimg.com"/><link rel="dns-prefetch" href="//static.zhihu.com"/><script nonce="3d5ca513-c3ae-4912-8efb-e661c2ed3a01" data-web-reporter-config="{&quot;platform&quot;:&quot;web&quot;,&quot;project&quot;:&quot;heifetz&quot;}">!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).webReporter={})}(this,function(e){"use strict";var t={},n=!1,o=function(){var e,o,r,a,i;return n||(e=document.querySelector("script[data-web-reporter-config]"),o=e&&e.dataset.webReporterConfig||"{}",r=JSON.parse(o),a=r.platform,i=r.project,t={platform:a,project:i},n=!0),t};function r(e){return a(function(){return localStorage.getItem(e)})()}function a(e){return function(){try{return e.apply(void 0,arguments)}catch(e){}}}var i=a(function(e,t){var n={platform:"web",project:o().project,clientTimestamp:+new Date};!function(e,t,n){"1"===r("weber:logenabled")&&console.log("[web-reporter]%o",{type:e,base:t,data:n})}(e,n,t),function(e,t){var n=btoa(JSON.stringify(t));if("undefined"!=typeof Blob&&window.navigator&&window.navigator.sendBeacon){var o=new Blob([n],{type:"text/plain"});navigator.sendBeacon(e,o)}else{var r=new XMLHttpRequest;r.open("POST",e),r.withCredentials=!1,r.setRequestHeader("Content-Type","text/plain;charset=UTF-8"),r.send(n)}}(r("weber:api")||"https://apm.zhihu.com/collector/web_json",{type:e,base:n,data:t})});e.report=i,Object.defineProperty(e,"__esModule",{value:!0})});
</script><link href="https://static.zhihu.com/heifetz/4267.216a26f4.a9fa4c5a5aa9380744ea.css" crossorigin="" rel="stylesheet"/><link href="https://static.zhihu.com/heifetz/column.216a26f4.84983d734ed9114ed00a.css" crossorigin="" rel="stylesheet"/><script nonce="3d5ca513-c3ae-4912-8efb-e661c2ed3a01">!function(){"use strict";!function(e,n){var r=[];function t(e){return function(){r.push([e,arguments])}}n.Raven={captureException:t("captureException"),captureMessage:t("captureMessage"),captureBreadcrumb:t("captureBreadcrumb")};var a,o,c,i,s,u="undefined"!=typeof DOMError;function d(e){var n=e instanceof Error||e instanceof ErrorEvent||u&&e instanceof DOMError||e instanceof DOMException;Raven.captureException(n?e:new Error(e.message||e.reason))}n.addEventListener("unhandledrejection",d),n.addEventListener("error",d,!0),a=e.src,o=e,c=function(){r.forEach(function(e){var n;(n=Raven)[e[0]].apply(n,e[1])}),n.removeEventListener("unhandledrejection",d),n.removeEventListener("error",d,!0)},i=document.head||document.getElementsByTagName("head")[0],(s=document.createElement("script")).crossOrigin=o.crossOrigin,s.dataset.sentryConfig=o["data-sentry-config"],s.onload=c,s.src=a,i.appendChild(s)}({"defer":true,"crossOrigin":"anonymous","src":"https://unpkg.zhimg.com/@cfe/sentry-script@1.3.1/dist/init.js","data-sentry-config":"{\"dsn\":\"https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224\",\"sampleRate\":0.1,\"release\":\"950-d3d05887\",\"ignoreErrorNames\":[\"NetworkError\",\"SecurityError\"],\"ignoreErrorsPreset\":\"ReactApp\",\"tags\":{\"app_name\":\"heifetz\"}}"},window)}();
</script></head><body class="WhiteBg-body PostIndex-body"><div id="root"><div class="App"><style data-emotion-css="uzm3ri">.css-uzm3ri{position:fixed;top:0;right:0;left:0;z-index:101;display:none;height:2px;pointer-events:none;background:#056DE8;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}</style><div class="LoadingBar  css-uzm3ri"></div><div><span style="position:absolute;top:-10000px;left:-10000px" role="log" aria-live="assertive"></span></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;&quot;}" data-zop="{&quot;authorName&quot;:&quot;jencol teng&quot;,&quot;itemId&quot;:166359481,&quot;title&quot;:&quot;C++17剖析：string_view的实现，以及性能&quot;,&quot;type&quot;:&quot;article&quot;}"><div class="ColumnPageHeader-Wrapper"><div><style data-emotion-css="1l12z7y">.css-1l12z7y{box-shadow:0px 16px 32px rgba(0,0,0,0.04);}</style><div class="Sticky ColumnPageHeader css-1l12z7y"><div class="ColumnPageHeader-content"><a href="//www.zhihu.com" aria-label="知乎"><style data-emotion-css="1hlrcxk">.css-1hlrcxk{-webkit-transition-property:fill;transition-property:fill;-webkit-transition-duration:0.25s;transition-duration:0.25s;-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;}</style><svg viewBox="0 0 64 30" fill="#056DE8" width="64" height="30" class="css-1hlrcxk"><path d="M29.05 4.582H16.733V25.94h3.018l.403 2.572 4.081-2.572h4.815V4.582zm-5.207 18.69l-2.396 1.509-.235-1.508h-1.724V7.233h6.78v16.04h-2.425zM14.46 14.191H9.982c0-.471.033-.954.039-1.458v-5.5h5.106V5.935a1.352 1.352 0 0 0-.404-.957 1.378 1.378 0 0 0-.968-.396H5.783c.028-.088.056-.177.084-.255.274-.82 1.153-3.326 1.153-3.326a4.262 4.262 0 0 0-2.413.698c-.57.4-.912.682-1.371 1.946-.532 1.453-.997 2.856-1.31 3.693C1.444 8.674.28 11.025.28 11.025a5.85 5.85 0 0 0 2.52-.61c1.119-.593 1.679-1.502 2.054-2.883l.09-.3h2.334v5.5c0 .5-.045.982-.073 1.46h-4.12c-.71 0-1.39.278-1.893.775a2.638 2.638 0 0 0-.783 1.874h6.527a17.717 17.717 0 0 1-.778 3.649 16.796 16.796 0 0 1-3.012 5.273A33.104 33.104 0 0 1 0 28.74s3.13 1.175 5.425-.954c1.388-1.292 2.631-3.814 3.23-5.727a28.09 28.09 0 0 0 1.12-5.229h5.967v-1.37a1.254 1.254 0 0 0-.373-.899 1.279 1.279 0 0 0-.909-.37z"></path><path d="M11.27 19.675l-2.312 1.491 5.038 7.458a6.905 6.905 0 0 0 .672-2.218 3.15 3.15 0 0 0-.28-2.168l-3.118-4.563zM51.449 15.195V5.842c4.181-.205 7.988-.405 9.438-.483l.851-.05c.387-.399.885-2.395.689-3.021-.073-.25-.213-.666-.638-.555a33.279 33.279 0 0 1-4.277.727c-2.766.321-3.97.404-7.804.682-6.718.487-12.709.72-12.709.72a2.518 2.518 0 0 0 .788 1.834 2.567 2.567 0 0 0 1.883.706c2.278-.095 5.598-.25 8.996-.41v9.203h-12.78c0 .703.281 1.377.783 1.874a2.69 2.69 0 0 0 1.892.777h10.105v7.075c0 .887-.464 1.192-1.231 1.214h-3.92a4.15 4.15 0 0 0 .837 1.544 4.2 4.2 0 0 0 1.403 1.067 6.215 6.215 0 0 0 2.71.277c1.36-.066 2.967-.826 2.967-3.57v-7.607h11.28c.342 0 .67-.135.91-.374.242-.239.378-.563.378-.902v-1.375H51.449z"></path><path d="M42.614 8.873a2.304 2.304 0 0 0-1.508-.926 2.334 2.334 0 0 0-1.727.405l-.376.272 4.255 5.85 2.24-1.62-2.884-3.98zM57.35 8.68l-3.125 4.097 2.24 1.663 4.517-5.927-.375-.277a2.32 2.32 0 0 0-1.722-.452 2.327 2.327 0 0 0-1.536.896z"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="//www.zhihu.com/column/c_1273663489799233536">工匠之路</a></div></div><div class="ColumnPageHeader-Button"><div class="Popover"><style data-emotion-css="d5yzzu">.css-d5yzzu{box-sizing:border-box;margin:0;min-width:0;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}</style><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" type="button" class="Button Button--plain Button--gray css-d5yzzu">切换模式</div></div><button type="button" class="Button ColumnPageHeader-WriteButton Button--blue"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--EditSurround" fill="currentColor"><path fill-rule="evenodd" d="M3.55 5.97a2.415 2.415 0 0 1 2.415-2.416h7.56a.75.75 0 0 1 0 1.5h-7.56a.915.915 0 0 0-.915.915v12.072c0 .505.41.915.915.915h12.074c.506 0 .915-.41.915-.915v-7.557a.75.75 0 0 1 1.5 0v7.557a2.415 2.415 0 0 1-2.415 2.415H5.965A2.415 2.415 0 0 1 3.55 18.04V5.969Z" clip-rule="evenodd"></path><path fill-rule="evenodd" d="M20.239 3.77a.75.75 0 0 1 0 1.06l-8.206 8.206a.75.75 0 0 1-1.06-1.06l8.205-8.206a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"></path></svg>写文章</button></div></div><div class="ColumnPageHeader-profile"><div><style data-emotion-css="1ay9vb9">.css-1ay9vb9{margin-right:16px;}</style><style data-emotion-css="jmxm1g">.css-jmxm1g{display:inline-block;padding:0 16px;font-size:14px;line-height:32px;color:#FFFFFF;text-align:center;cursor:pointer;background:none;border:1px solid;border-radius:3px;background-color:#056DE8;border-color:#056DE8;margin-right:16px;}.css-jmxm1g::mozFocusInner{padding:0;border:0;}.css-jmxm1g:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}.css-jmxm1g:focus-visible{box-shadow:0 0 0 2px #FFFFFF,0 0 0 4px rgba(5,109,232,0.3);}.css-jmxm1g:disabled{cursor:default;opacity:0.5;}.css-jmxm1g:hover{border-color:#0568dc;background-color:#0568dc;}</style><button type="button" class="Button Button--primary Button--blue css-jmxm1g">登录/注册</button><style data-emotion-css="1fv1gmw">.css-1fv1gmw{position:fixed;bottom:50px;right:64px;width:336px;z-index:2;}</style></div></div></div></div></div><style data-emotion-css="78p1r9">.css-78p1r9{box-sizing:border-box;margin:0;min-width:0;margin-left:auto;margin-right:auto;max-width:690px;margin-top:0;}@media screen and (min-width:40em){.css-78p1r9{margin-top:1em;}}</style><div class="css-78p1r9"><style data-emotion-css="1aoxaxf">.css-1aoxaxf{position:relative;padding-bottom:75%;height:0;border-radius:inherit;}</style><style data-emotion-css="49axn5">.css-49axn5{box-sizing:border-box;margin:0;min-width:0;position:relative;padding-bottom:75%;height:0;border-radius:inherit;}</style><div class="css-49axn5"><style data-emotion-css="1ld0bim">.css-1ld0bim{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;}</style><div class="css-1ld0bim"><style data-emotion-css="1ujtx97">.css-1ujtx97{object-fit:cover;background-color:#F6F6F6;}</style><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#x27;http://www.w3.org/2000/svg&#x27;&gt;&lt;/svg&gt;" alt="C++17剖析：string_view的实现，以及性能" width="100%" height="100%" class="css-1ujtx97"/></div></div></div><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">C++17剖析：string_view的实现，以及性能</h1><div class="Post-Author"><div class="AuthorInfo" itemProp="author" itemscope="" itemType="http://schema.org/Person"><div class="AuthorInfo"><meta itemProp="name" content="jencol teng"/><meta itemProp="image" content="https://picx.zhimg.com/v2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b"/><meta itemProp="url" content="https://www.zhihu.com/people/jencol-teng"/><meta itemProp="zhihu:followerCount"/><span class="UserLink AuthorInfo-avatarWrapper"><a href="//www.zhihu.com/people/jencol-teng" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User"><style data-emotion-css="uodor8">.css-uodor8{border-radius:50%;}</style><style data-emotion-css="1y9jkzv">.css-1y9jkzv{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#FFFFFF;width:38px;height:38px;border-radius:50%;}</style><img class="Avatar AuthorInfo-avatar css-1y9jkzv" src="https://picx.zhimg.com/v2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b" srcSet="https://picx.zhimg.com/v2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b 2x" alt="jencol teng"/></a></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><a href="//www.zhihu.com/people/jencol-teng" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User">jencol teng</a><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="ztext AuthorInfo-badgeText css-0">专注后端开发，大数据，高并发，go/c++</div></div></div></div></div></div></div><div role="button" tabindex="0"><span class="Voters"><button type="button" class="Button Button--plain">85 人<!-- -->赞同了该文章</button></span></div></header><div class="Post-RichTextContainer"><style data-emotion-css="1yuhvjn">.css-1yuhvjn{margin-top:16px;}</style><div class="css-1yuhvjn"><style data-emotion-css="376mun">.css-376mun{position:relative;display:inline;}</style><div class="css-376mun"><style data-emotion-css="1hhle02">.css-1hhle02 .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(246,246,246,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-1hhle02 .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-1hhle02 .FileLinkCard-info{margin-left:12px;}.css-1hhle02 .FileLinkCard-name{color:#121212;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1hhle02 .FileLinkCard-meta{color:#999999;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-1hhle02 .FileLinkCard-source{white-space:pre;}.css-1hhle02 img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}</style><style data-emotion-css="1wr1m8">.css-1wr1m8 .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#F6F6F6;}.css-1wr1m8 .LinkCard.new,.css-1wr1m8 .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1wr1m8 .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1wr1m8 .LinkCard.new .LinkCard-contents .loading{height:14px;background:#EBEBEB;border-radius:7px;}.css-1wr1m8 .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1wr1m8 .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#121212;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wr1m8 .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1wr1m8 .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1wr1m8 .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1wr1m8 .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1wr1m8 .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#999999;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wr1m8 .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#444444;}.css-1wr1m8 .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#999999;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wr1m8 .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1wr1m8 .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(211,211,211,0.3);}.css-1wr1m8 .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1wr1m8 .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1wr1m8 .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#EBEBEB;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1wr1m8 .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#EBEBEB;color:#D3D3D3;}.css-1wr1m8 .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#999999;}.css-1wr1m8 .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1wr1m8 .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1wr1m8 .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#444444;}.css-1wr1m8 .LinkCard.new .LinkCard-richText .text{color:#444444;}.css-1wr1m8 .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1wr1m8 .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1wr1m8 .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1wr1m8 .LinkCard.old,.css-1wr1m8 .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1wr1m8 .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(246,246,246,0.88);color:#D3D3D3;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#EBEBEB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#EBEBEB;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}</style><style data-emotion-css="1dnyyvy">.css-1dnyyvy .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1dnyyvy .LinkCard.old,.css-1dnyyvy .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1dnyyvy .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(246,246,246,0.88);color:#D3D3D3;}.css-1dnyyvy .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#EBEBEB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1dnyyvy .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1dnyyvy .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1dnyyvy .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#EBEBEB;}.css-1dnyyvy .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1dnyyvy .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-1dnyyvy .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#F6F6F6;}.css-1dnyyvy .LinkCard.new,.css-1dnyyvy .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1dnyyvy .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1dnyyvy .LinkCard.new .LinkCard-contents .loading{height:14px;background:#EBEBEB;border-radius:7px;}.css-1dnyyvy .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1dnyyvy .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#121212;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1dnyyvy .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1dnyyvy .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1dnyyvy .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1dnyyvy .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1dnyyvy .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#999999;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1dnyyvy .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#444444;}.css-1dnyyvy .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#999999;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1dnyyvy .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1dnyyvy .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(211,211,211,0.3);}.css-1dnyyvy .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1dnyyvy .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1dnyyvy .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#EBEBEB;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1dnyyvy .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#EBEBEB;color:#D3D3D3;}.css-1dnyyvy .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#999999;}.css-1dnyyvy .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1dnyyvy .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1dnyyvy .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#444444;}.css-1dnyyvy .LinkCard.new .LinkCard-richText .text{color:#444444;}.css-1dnyyvy .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1dnyyvy .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1dnyyvy .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(246,246,246,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-1dnyyvy .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-1dnyyvy .FileLinkCard-info{margin-left:12px;}.css-1dnyyvy .FileLinkCard-name{color:#121212;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1dnyyvy .FileLinkCard-meta{color:#999999;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-1dnyyvy .FileLinkCard-source{white-space:pre;}.css-1dnyyvy img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}</style><style data-emotion-css="1g0fqss animation-1yvu044">.css-1g0fqss{word-break:break-word;line-height:1.6;}.css-1g0fqss > [data-first-child]{margin-top:0;}.css-1g0fqss > :last-child{margin-bottom:0;}.css-1g0fqss h1,.css-1g0fqss h2{clear:left;margin-top:calc((1.4em * 2) / 1.2);margin-bottom:calc(1.4em / 1.2);font-size:1.2em;line-height:1.5;font-weight:600;}.css-1g0fqss h3,.css-1g0fqss h4,.css-1g0fqss h5,.css-1g0fqss h6{clear:left;margin-top:calc((1.4em * 1.5) / 1.1);margin-bottom:calc(1.4em / 1.1);font-size:1.1em;line-height:1.5;font-weight:600;}.css-1g0fqss u{-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid #444444;}.css-1g0fqss b{font-weight:600;}.css-1g0fqss sup{font-size:0.8em;}.css-1g0fqss sup[data-draft-type='reference']{color:#175199;}.css-1g0fqss a:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}html[data-focus-visible] .css-1g0fqss a:focus{box-shadow:0 0 0 2px #FFFFFF,0 0 0 4px rgba(5,109,232,0.3);}.css-1g0fqss a.ztext-link,.css-1g0fqss a.internal,.css-1g0fqss a.external{-webkit-text-decoration:none;text-decoration:none;cursor:pointer;border-bottom:1px solid #808080;}.css-1g0fqss a.ztext-link:hover,.css-1g0fqss a.internal:hover,.css-1g0fqss a.external:hover{color:#175199;border-bottom:1px solid #175199;}.css-1g0fqss a.ztext-link > .ellipsis::after,.css-1g0fqss a.internal > .ellipsis::after,.css-1g0fqss a.external > .ellipsis::after{content:'...';}.css-1g0fqss a.ztext-link > .invisible,.css-1g0fqss a.internal > .invisible,.css-1g0fqss a.external > .invisible{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;}.css-1g0fqss a.ztext-link u,.css-1g0fqss a.internal u,.css-1g0fqss a.external u{border:none;}.css-1g0fqss a.member_mention{color:#175199;}.css-1g0fqss a.member_mention:hover{border-bottom:1px solid #175199;}.css-1g0fqss a.UserLink-link{color:#175199;}.css-1g0fqss a.UserLink-link:hover{border-bottom:1px solid #175199;}.css-1g0fqss p{margin:1.4em 0;}.css-1g0fqss p.ztext-empty-paragraph{margin:calc((2.8em- (1.4em * 2 + 1.6em)) / 2) 0;}.css-1g0fqss p.ztext-empty-paragraph + .ztext-empty-paragraph{margin:1.4em 0;}.css-1g0fqss hr{margin:4em auto;width:240px;max-width:100%;border:none;border-top:1px solid #D3D3D3;}.css-1g0fqss img[eeimg]{max-width:100%;vertical-align:middle;}.css-1g0fqss img[eeimg="1"]{margin:0 3px;max-width:calc(100% - 6px);display:inline-block;}.css-1g0fqss img[eeimg="2"]{margin:1.4em auto;display:block;}.css-1g0fqss blockquote{margin:1.4em 0;padding-left:1em;color:#646464;border-left:3px solid #D3D3D3;}.css-1g0fqss ol,.css-1g0fqss ul{margin:1.4em 0;padding:0;width:100%;}.css-1g0fqss ol ol,.css-1g0fqss ul ol,.css-1g0fqss ol ul,.css-1g0fqss ul ul{margin:0;}.css-1g0fqss ol li::before,.css-1g0fqss ul li::before{width:1em;}.css-1g0fqss ol > ol,.css-1g0fqss ul > ol,.css-1g0fqss ol > ul,.css-1g0fqss ul > ul{display:table-row;}.css-1g0fqss ol > ol::before,.css-1g0fqss ul > ol::before,.css-1g0fqss ol > ul::before,.css-1g0fqss ul > ul::before{display:table-cell;content:'';}.css-1g0fqss ul{display:table;}.css-1g0fqss ul>li{display:table-row;list-style:none;}.css-1g0fqss ul>li::before{display:table-cell;content:'•  ';white-space:pre;}.css-1g0fqss ol{display:table;counter-reset:ol;}.css-1g0fqss ol > li{display:table-row;list-style:none;}.css-1g0fqss ol > li::before{display:table-cell;text-align:right;counter-increment:ol;content:counter(ol) '. ';white-space:pre;}.css-1g0fqss ol ol{counter-reset:ol2;}.css-1g0fqss ol ol li::before{counter-increment:ol2;content:counter(ol2) '. ';}.css-1g0fqss ol ol ol{counter-reset:ol3;}.css-1g0fqss ol ol ol li::before{counter-increment:ol3;content:counter(ol3) '. ';}.css-1g0fqss ol ol ol ol{counter-reset:ol4;}.css-1g0fqss ol ol ol ol li::before{counter-increment:ol4;content:counter(ol4) '. ';}.css-1g0fqss figure{margin:1.4em 0;}.css-1g0fqss figure .content_image,.css-1g0fqss figure .origin_image{margin:0 auto;}.css-1g0fqss figure figcaption{margin-top:calc(0.6em / 0.9);padding:0 1em;font-size:0.9em;line-height:1.5;text-align:center;color:#999999;}.css-1g0fqss figure + figure{margin-top:calc(1.4em * 1.6);}.css-1g0fqss figure[data-size='small'],.css-1g0fqss figure:not([data-size]) > [data-size='small']{clear:both;}.css-1g0fqss figure[data-size='left'],.css-1g0fqss figure:not([data-size]) > [data-size='left']{float:left;margin:0 20px 20px 0;max-width:33%;}.css-1g0fqss figure[data-size='right'],.css-1g0fqss figure:not([data-size]) > [data-size='right']{float:right;margin:0 0 20px 20px;max-width:33%;}.css-1g0fqss figure[data-size='collapse']{margin-bottom:0;}.css-1g0fqss figure[data-size='collapse'] + figure{margin-top:0;}.css-1g0fqss .content_image,.css-1g0fqss .origin_image{display:block;max-width:100%;height:auto;margin:1.4em auto;}.css-1g0fqss .content_image[data-size='small'],.css-1g0fqss .origin_image[data-size='small']{max-width:40%;}.css-1g0fqss .content_image.zh-lightbox-thumb,.css-1g0fqss .origin_image.zh-lightbox-thumb{cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in;}.css-1g0fqss code{margin:0 2px;padding:3px 4px;border-radius:3px;font-family:Menlo,Monaco,Consolas,'Andale Mono','lucida console','Courier New',monospace;font-size:0.9em;background-color:#F6F6F6;}.css-1g0fqss pre{margin:1.4em 0;padding:calc(0.8em / 0.9);font-size:0.9em;word-break:initial;word-wrap:initial;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;background:#F6F6F6;border-radius:4px;}.css-1g0fqss pre code{margin:0;padding:0;font-size:inherit;border-radius:0;background-color:inherit;}.css-1g0fqss li pre{white-space:pre-wrap;}.css-1g0fqss table[data-draft-type='table']{border-collapse:collapse;font-size:15px;margin:1.4em auto;max-width:100%;table-layout:fixed;text-align:left;width:100%;}.css-1g0fqss table[data-draft-type='table'][data-size='small']{min-width:260px;width:40%;}.css-1g0fqss table[data-draft-type='table'][data-row-style='striped'] tr:nth-of-type(2n + 1){background:#F6F6F6;}.css-1g0fqss table[data-draft-type='table'] td,.css-1g0fqss table[data-draft-type='table'] th{border:1px solid #D3D3D3;line-height:24px;height:24px;padding:3px 12px;}.css-1g0fqss table[data-draft-type='table'] th{background:#EBEBEB;color:#121212;font-weight:500;}.css-1g0fqss .video-box,.css-1g0fqss .link-box{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:1.4em 0;overflow:auto;white-space:normal;cursor:pointer;border:solid 1px #EBEBEB;border-radius:4px;}.css-1g0fqss .lazy[data-lazy-status]{background-color:#F6F6F6;}.css-1g0fqss .lazy[data-lazy-status="ok"]{background-color:transparent;-webkit-animation:animation-1yvu044 0.5s ease-in;animation:animation-1yvu044 0.5s ease-in;}.css-1g0fqss .highlight{margin:1em 0;}.css-1g0fqss .highlight pre{margin:0;}.css-1g0fqss .highlight .hll{background-color:#FDFDFD;}.css-1g0fqss .highlight .c{font-style:italic;color:#999999;}.css-1g0fqss .highlight .err{color:#F1403C;}.css-1g0fqss .highlight .k{font-weight:600;}.css-1g0fqss .highlight .o{font-weight:600;}.css-1g0fqss .highlight .cm{font-style:italic;color:#999999;}.css-1g0fqss .highlight .cp{font-weight:600;color:#999999;}.css-1g0fqss .highlight .c1{font-style:italic;color:#999999;}.css-1g0fqss .highlight .cs{font-style:italic;font-weight:600;color:#999999;}.css-1g0fqss .highlight .gd{color:#FF3366;}.css-1g0fqss .highlight .ge{font-style:italic;}.css-1g0fqss .highlight .gr{color:#F1403C;}.css-1g0fqss .highlight .gh{color:#999999;}.css-1g0fqss .highlight .gi{color:#12b370;}.css-1g0fqss .highlight .go{color:#808080;}.css-1g0fqss .highlight .gp{color:#646464;}.css-1g0fqss .highlight .gs{font-weight:600;}.css-1g0fqss .highlight .gu{color:#999999;}.css-1g0fqss .highlight .gt{color:#F1403C;}.css-1g0fqss .highlight .kc{font-weight:600;}.css-1g0fqss .highlight .kd{font-weight:600;}.css-1g0fqss .highlight .kn{font-weight:600;}.css-1g0fqss .highlight .kp{font-weight:600;}.css-1g0fqss .highlight .kr{font-weight:600;}.css-1g0fqss .highlight .kt{font-weight:600;color:#175199;}.css-1g0fqss .highlight .m{color:#056DE8;}.css-1g0fqss .highlight .s{color:#F1403C;}.css-1g0fqss .highlight .na{color:#056DE8;}.css-1g0fqss .highlight .nb{color:#056DE8;}.css-1g0fqss .highlight .nc{font-weight:600;color:#175199;}.css-1g0fqss .highlight .no{color:#056DE8;}.css-1g0fqss .highlight .ni{color:#5555DD;}.css-1g0fqss .highlight .ne{font-weight:600;color:#F1403C;}.css-1g0fqss .highlight .nf{font-weight:600;color:#F1403C;}.css-1g0fqss .highlight .nn{color:#646464;}.css-1g0fqss .highlight .nt{color:#175199;}.css-1g0fqss .highlight .nv{color:#056DE8;}.css-1g0fqss .highlight .ow{font-weight:600;}.css-1g0fqss .highlight .w{color:#BFBFBF;}.css-1g0fqss .highlight .mf{color:#056DE8;}.css-1g0fqss .highlight .mh{color:#056DE8;}.css-1g0fqss .highlight .mi{color:#056DE8;}.css-1g0fqss .highlight .mo{color:#056DE8;}.css-1g0fqss .highlight .sb{color:#F1403C;}.css-1g0fqss .highlight .sc{color:#F1403C;}.css-1g0fqss .highlight .sd{color:#F1403C;}.css-1g0fqss .highlight .s2{color:#F1403C;}.css-1g0fqss .highlight .se{color:#F1403C;}.css-1g0fqss .highlight .sh{color:#F1403C;}.css-1g0fqss .highlight .si{color:#F1403C;}.css-1g0fqss .highlight .sx{color:#F1403C;}.css-1g0fqss .highlight .sr{color:#A5542F;}.css-1g0fqss .highlight .s1{color:#F1403C;}.css-1g0fqss .highlight .ss{color:#F1403C;}.css-1g0fqss .highlight .bp{color:#999999;}.css-1g0fqss .highlight .vc{color:#056DE8;}.css-1g0fqss .highlight .vg{color:#056DE8;}.css-1g0fqss .highlight .vi{color:#056DE8;}.css-1g0fqss .highlight .il{color:#056DE8;}.css-1g0fqss .highlight::-webkit-scrollbar{width:6px;height:6px;}.css-1g0fqss .highlight::-webkit-scrollbar-thumb:horizontal{background-color:rgba(18,18,18,0.5);border-radius:6px;}.css-1g0fqss .highlight::-webkit-scrollbar-thumb:horizontal:hover{background-color:rgba(18,18,18,0.6);}.css-1g0fqss .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1g0fqss .LinkCard.old,.css-1g0fqss .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1g0fqss .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(246,246,246,0.88);color:#D3D3D3;}.css-1g0fqss .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#EBEBEB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1g0fqss .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1g0fqss .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1g0fqss .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#EBEBEB;}.css-1g0fqss .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1g0fqss .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-1g0fqss .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#F6F6F6;}.css-1g0fqss .LinkCard.new,.css-1g0fqss .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1g0fqss .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1g0fqss .LinkCard.new .LinkCard-contents .loading{height:14px;background:#EBEBEB;border-radius:7px;}.css-1g0fqss .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1g0fqss .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#121212;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1g0fqss .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1g0fqss .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1g0fqss .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1g0fqss .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1g0fqss .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#999999;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1g0fqss .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#444444;}.css-1g0fqss .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#999999;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1g0fqss .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1g0fqss .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(211,211,211,0.3);}.css-1g0fqss .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1g0fqss .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1g0fqss .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#EBEBEB;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1g0fqss .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#EBEBEB;color:#D3D3D3;}.css-1g0fqss .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#999999;}.css-1g0fqss .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1g0fqss .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1g0fqss .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#444444;}.css-1g0fqss .LinkCard.new .LinkCard-richText .text{color:#444444;}.css-1g0fqss .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1g0fqss .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1g0fqss .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(246,246,246,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-1g0fqss .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-1g0fqss .FileLinkCard-info{margin-left:12px;}.css-1g0fqss .FileLinkCard-name{color:#121212;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1g0fqss .FileLinkCard-meta{color:#999999;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-1g0fqss .FileLinkCard-source{white-space:pre;}.css-1g0fqss img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}@-webkit-keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}@keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}</style><div class="RichText ztext Post-RichText css-1g0fqss" options="[object Object]"><h2 data-first-child>主要内容</h2><p data-pid="VtNipygB">C++17标准发布，string_view是标准新增的内容。这篇文章主要分析string_view的适用范围、注意事项，并分析string_view带来的性能提升，最后从gcc 8.2的libstdc++库源码级别分析性能提升的原因。 </p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-46fba9e1ba99bd61fcf7d85fc9ddce26_b.jpg" data-caption="" data-size="normal" data-rawwidth="893" data-rawheight="431" class="origin_image zh-lightbox-thumb" width="893" data-original="https://pic3.zhimg.com/v2-46fba9e1ba99bd61fcf7d85fc9ddce26_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;893&#39; height=&#39;431&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="893" data-rawheight="431" class="origin_image zh-lightbox-thumb lazy" width="893" data-original="https://pic3.zhimg.com/v2-46fba9e1ba99bd61fcf7d85fc9ddce26_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-46fba9e1ba99bd61fcf7d85fc9ddce26_b.jpg" data-original-token="v2-dfb89ab129b7419c2cd74bff7b3c5739"/></figure><p class="ztext-empty-paragraph"><br/></p><h2>背景知识：静态字符串的处理</h2><p data-pid="-IWthI3y">所谓静态字符串，就是编译时已经固定的字符串，他们存储在二进制文件的静态存储区，而且程序只能读取，不能改动。 一个例子：</p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//指针指向静态字符串
</span><span class="c1"></span>        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str_ptr</span> <span class="o">=</span> <span class="s">&#34;this is a static string&#34;</span><span class="p">;</span>

        <span class="c1">//字符串数组
</span><span class="c1"></span>        <span class="kt">char</span> <span class="n">str_array</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&#34;this is a static string&#34;</span><span class="p">;</span>

        <span class="c1">//std::string
</span><span class="c1"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">&#34;this is a static string&#34;</span><span class="p">;</span>

        <span class="c1">//std::string_view
</span><span class="c1"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string_view</span> <span class="n">sv</span> <span class="o">=</span> <span class="s">&#34;this is a static string&#34;</span><span class="p">;</span>
</code></pre></div><p data-pid="Mg99Pf-Z">反汇编：</p><div class="highlight"><pre><code class="language-text">g++ -O0 -o static_str static_str.cc -std=c++17 -g &amp;&amp; objdump -S -t -D static_str &gt; static_str.s</code></pre></div><p data-pid="MuLWQVzX">汇编代码如下：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="mi">4013</span><span class="nl">b8</span><span class="p">:</span>       <span class="mi">55</span>                      <span class="n">push</span>   <span class="o">%</span><span class="n">rbp</span>
  <span class="mi">4013</span><span class="nl">b9</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">e5</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rsp</span><span class="p">,</span><span class="o">%</span><span class="n">rbp</span>
  <span class="mi">4013</span><span class="nl">bc</span><span class="p">:</span>       <span class="mi">53</span>                      <span class="n">push</span>   <span class="o">%</span><span class="n">rbx</span>
  <span class="mi">4013</span><span class="nl">bd</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">83</span> <span class="n">ec</span> <span class="mi">68</span>             <span class="n">sub</span>    <span class="err">$</span><span class="mh">0x68</span><span class="p">,</span><span class="o">%</span><span class="n">rsp</span>
        <span class="c1">//指针指向静态字符串
</span><span class="c1"></span>        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str_ptr</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="p">;</span>
        <span class="cp">##直接设置字符串指针
</span><span class="cp"></span>  <span class="mi">4013</span><span class="nl">c1</span><span class="p">:</span>       <span class="mi">48</span> <span class="n">c7</span> <span class="mi">45</span> <span class="n">e8</span> <span class="mi">30</span> <span class="mi">1</span><span class="n">e</span> <span class="mi">40</span>    <span class="n">movq</span>   <span class="err">$</span><span class="mh">0x401e30</span><span class="p">,</span><span class="o">-</span><span class="mh">0x18</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">)</span>  
  <span class="mi">4013</span><span class="nl">c8</span><span class="p">:</span>       <span class="mo">00</span> 

        <span class="c1">//字符串数组
</span><span class="c1"></span>        <span class="kt">char</span> <span class="n">str_array</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="p">;</span>
        <span class="cp">##这里使用一个很取巧的办法，不使用循环，而是使用多个mov语句把字符串设置到堆栈
</span><span class="cp"></span>  <span class="mi">4013</span><span class="nl">c9</span><span class="p">:</span>       <span class="mi">48</span> <span class="n">b8</span> <span class="mi">74</span> <span class="mi">68</span> <span class="mi">69</span> <span class="mi">73</span> <span class="mi">20</span>    <span class="n">mov</span>    <span class="err">$</span><span class="mh">0x2073692073696874</span><span class="p">,</span><span class="o">%</span><span class="n">rax</span> 
  <span class="mi">4013</span><span class="nl">d0</span><span class="p">:</span>       <span class="mi">69</span> <span class="mi">73</span> <span class="mi">20</span> 
  <span class="mi">4013</span><span class="nl">d3</span><span class="p">:</span>       <span class="mi">48</span> <span class="n">ba</span> <span class="mi">61</span> <span class="mi">20</span> <span class="mi">73</span> <span class="mi">74</span> <span class="mi">61</span>    <span class="n">mov</span>    <span class="err">$</span><span class="mh">0x6369746174732061</span><span class="p">,</span><span class="o">%</span><span class="n">rdx</span>
  <span class="mi">4013</span><span class="nl">da</span><span class="p">:</span>       <span class="mi">74</span> <span class="mi">69</span> <span class="mi">63</span> 
  <span class="mi">4013</span><span class="nl">dd</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="mi">45</span> <span class="n">c0</span>             <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">-</span><span class="mh">0x40</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">)</span>
  <span class="mf">4013e1</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="mi">55</span> <span class="n">c8</span>             <span class="n">mov</span>    <span class="o">%</span><span class="n">rdx</span><span class="p">,</span><span class="o">-</span><span class="mh">0x38</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">)</span>
  <span class="mf">4013e5</span><span class="o">:</span>       <span class="mi">48</span> <span class="n">b8</span> <span class="mi">20</span> <span class="mi">73</span> <span class="mi">74</span> <span class="mi">72</span> <span class="mi">69</span>    <span class="n">mov</span>    <span class="err">$</span><span class="mh">0x21676e6972747320</span><span class="p">,</span><span class="o">%</span><span class="n">rax</span>
  <span class="mi">4013</span><span class="nl">ec</span><span class="p">:</span>       <span class="mi">6</span><span class="n">e</span> <span class="mi">67</span> <span class="mi">21</span> 
  <span class="mi">4013</span><span class="nl">ef</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="mi">45</span> <span class="n">d0</span>             <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">-</span><span class="mh">0x30</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">)</span>
  <span class="mf">4013f</span><span class="mi">3</span><span class="o">:</span>       <span class="n">c6</span> <span class="mi">45</span> <span class="n">d8</span> <span class="mo">00</span>             <span class="n">movb</span>   <span class="err">$</span><span class="mh">0x0</span><span class="p">,</span><span class="o">-</span><span class="mh">0x28</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">)</span>

        <span class="c1">//std::string
</span><span class="c1"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="p">;</span>
        <span class="cp">#esi保存了字符串开始地址$0x401e30,调用std::string的构造函数
</span><span class="cp"></span>  <span class="mf">4013f</span><span class="mi">7</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">8</span><span class="n">d</span> <span class="mi">45</span> <span class="n">e7</span>             <span class="n">lea</span>    <span class="o">-</span><span class="mh">0x19</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">),</span><span class="o">%</span><span class="n">rax</span>
  <span class="mf">4013f</span><span class="nl">b</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">c7</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rdi</span>
  <span class="mf">4013f</span><span class="nl">e</span><span class="p">:</span>       <span class="n">e8</span> <span class="mi">15</span> <span class="n">fe</span> <span class="n">ff</span> <span class="n">ff</span>          <span class="n">callq</span>  <span class="mi">401218</span> <span class="o">&lt;</span><span class="n">_ZNSaIcEC1Ev</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
  <span class="mi">401403</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">8</span><span class="n">d</span> <span class="mi">55</span> <span class="n">e7</span>             <span class="n">lea</span>    <span class="o">-</span><span class="mh">0x19</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">),</span><span class="o">%</span><span class="n">rdx</span>
  <span class="mi">401407</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">8</span><span class="n">d</span> <span class="mi">45</span> <span class="n">a0</span>             <span class="n">lea</span>    <span class="o">-</span><span class="mh">0x60</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">),</span><span class="o">%</span><span class="n">rax</span>
  <span class="mi">40140</span><span class="nl">b</span><span class="p">:</span>       <span class="n">be</span> <span class="mi">30</span> <span class="mi">1</span><span class="n">e</span> <span class="mi">40</span> <span class="mo">00</span>          <span class="n">mov</span>    <span class="err">$</span><span class="mh">0x401e30</span><span class="p">,</span><span class="o">%</span><span class="n">esi</span>
  <span class="mi">401410</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">c7</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rdi</span>
  <span class="mi">401413</span><span class="o">:</span>       <span class="n">e8</span> <span class="n">fe</span> <span class="mo">01</span> <span class="mo">00</span> <span class="mo">00</span>          <span class="n">callq</span>  <span class="mi">401616</span> <span class="o">&lt;</span><span class="n">_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_</span><span class="o">&gt;</span>
  <span class="mi">401418</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">8</span><span class="n">d</span> <span class="mi">45</span> <span class="n">e7</span>             <span class="n">lea</span>    <span class="o">-</span><span class="mh">0x19</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">),</span><span class="o">%</span><span class="n">rax</span>
  <span class="mi">40141</span><span class="nl">c</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">c7</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rdi</span>
  <span class="mf">40141f</span><span class="o">:</span>       <span class="n">e8</span> <span class="n">c4</span> <span class="n">fd</span> <span class="n">ff</span> <span class="n">ff</span>          <span class="n">callq</span>  <span class="mf">4011e8</span> <span class="o">&lt;</span><span class="n">_ZNSaIcED1Ev</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>

        <span class="c1">//std::string_view
</span><span class="c1"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string_view</span> <span class="n">sv</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="p">;</span>
        <span class="cp">#直接设置字符串的长度0x18，也就是24Bytes，还有字符串的起始指针$0x401e30，没有堆内存分配
</span><span class="cp"></span>  <span class="mi">401424</span><span class="o">:</span>       <span class="mi">48</span> <span class="n">c7</span> <span class="mi">45</span> <span class="mi">90</span> <span class="mi">18</span> <span class="mo">00</span> <span class="mo">00</span>    <span class="n">movq</span>   <span class="err">$</span><span class="mh">0x18</span><span class="p">,</span><span class="o">-</span><span class="mh">0x70</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">)</span>
  <span class="mi">40142</span><span class="nl">b</span><span class="p">:</span>       <span class="mo">00</span> 
  <span class="mi">40142</span><span class="nl">c</span><span class="p">:</span>       <span class="mi">48</span> <span class="n">c7</span> <span class="mi">45</span> <span class="mi">98</span> <span class="mi">30</span> <span class="mi">1</span><span class="n">e</span> <span class="mi">40</span>    <span class="n">movq</span>   <span class="err">$</span><span class="mh">0x401e30</span><span class="p">,</span><span class="o">-</span><span class="mh">0x68</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">)</span>
  <span class="mi">401433</span><span class="o">:</span>       <span class="mo">00</span> 

        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
  <span class="mi">401434</span><span class="o">:</span>       <span class="n">bb</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span>          <span class="n">mov</span>    <span class="err">$</span><span class="mh">0x0</span><span class="p">,</span><span class="o">%</span><span class="n">ebx</span>

        <span class="c1">//字符串数组
</span><span class="c1"></span>        <span class="cp">## 对象析构：字符串数组分配在栈上，无需析构
</span><span class="cp"></span>        <span class="kt">char</span> <span class="n">str_array</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="p">;</span>

        <span class="c1">//std::string
</span><span class="c1"></span>        <span class="cp">## 对象析构：调用析构函数
</span><span class="cp"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="p">;</span>
  <span class="mi">401439</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">8</span><span class="n">d</span> <span class="mi">45</span> <span class="n">a0</span>             <span class="n">lea</span>    <span class="o">-</span><span class="mh">0x60</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">),</span><span class="o">%</span><span class="n">rax</span>
  <span class="mi">40143</span><span class="nl">d</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">c7</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rdi</span>
  <span class="mi">401440</span><span class="o">:</span>       <span class="n">e8</span> <span class="n">a9</span> <span class="mo">01</span> <span class="mo">00</span> <span class="mo">00</span>          <span class="n">callq</span>  <span class="mi">4015</span><span class="n">ee</span> <span class="o">&lt;</span><span class="n">_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev</span><span class="o">&gt;</span>
  <span class="mi">401445</span><span class="o">:</span>       <span class="mi">89</span> <span class="n">d8</span>                   <span class="n">mov</span>    <span class="o">%</span><span class="n">ebx</span><span class="p">,</span><span class="o">%</span><span class="n">eax</span>
  <span class="mi">401447</span><span class="o">:</span>       <span class="n">eb</span> <span class="mi">1</span><span class="n">a</span>                   <span class="n">jmp</span>    <span class="mi">401463</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mh">0xab</span><span class="o">&gt;</span>
  <span class="mi">401449</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">c3</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rbx</span>
  <span class="mi">40144</span><span class="nl">c</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">8</span><span class="n">d</span> <span class="mi">45</span> <span class="n">e7</span>             <span class="n">lea</span>    <span class="o">-</span><span class="mh">0x19</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">),</span><span class="o">%</span><span class="n">rax</span>
  <span class="mi">401450</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">c7</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rdi</span>
  <span class="mi">401453</span><span class="o">:</span>       <span class="n">e8</span> <span class="mi">90</span> <span class="n">fd</span> <span class="n">ff</span> <span class="n">ff</span>          <span class="n">callq</span>  <span class="mf">4011e8</span> <span class="o">&lt;</span><span class="n">_ZNSaIcED1Ev</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
  <span class="mi">401458</span><span class="o">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">d8</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rbx</span><span class="p">,</span><span class="o">%</span><span class="n">rax</span>
  <span class="mi">40145</span><span class="nl">b</span><span class="p">:</span>       <span class="mi">48</span> <span class="mi">89</span> <span class="n">c7</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rdi</span>
  <span class="mi">40145</span><span class="nl">e</span><span class="p">:</span>       <span class="n">e8</span> <span class="n">e5</span> <span class="n">fd</span> <span class="n">ff</span> <span class="n">ff</span>          <span class="n">callq</span>  <span class="mi">401248</span> <span class="o">&lt;</span><span class="n">_Unwind_Resume</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>

        <span class="c1">//std::string_view
</span><span class="c1"></span>        <span class="cp">## 对象析构：std::string_view分配在栈上，无需析构
</span><span class="cp"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string_view</span> <span class="n">sv</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="p">;</span>

        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><ul><li data-pid="eVisiGX4"><b>静态字符串</b>：会把指针指向静态存储区，字符串只读。如果尝试修改，会导致段错误（segment fault）。</li><li data-pid="46qp30u8"><b>字符串数组</b>：在栈上分配一块空间，长度等于字符串的长度+1（因为还需要包括末尾的&#39;\0&#39;字符），然后把字符串拷贝到缓冲区。上述代码，我之前一直以为会使用循环（类似memmove），但是一直找不到循环的语句，却找到一堆莫名其妙的数字（$0x2073692073696874，$0x6369746174732061）仔细观察发现，原来编译器把一个长字符串分开为几个64bit的长整数，逐次mov到栈缓冲区中， 那几个长长的整数其实是： 0x2073692073696874=[ si siht]，$0x6369746174732061=[citats a]，0x21676e6972747320=[!gnirts]，刚好就是字符串的反序，编译器是用这种方式来提高运行效率的。<b>我觉得其实末尾的0是可以和字符串一起写在同一个mov指令中的，这样执行的指令就可以少一个了，不知道为什么不这样做。</b></li><li data-pid="tS2l4uBR"><b>std::string</b>：只在寄存器设置了字符串的起始指针，调用了<code>basic_string( const CharT* s,const Allocator&amp; alloc = Allocator() )</code>构造函数，中间涉及各种检测和字符串拷贝，后面会在另一篇讲述std::string原理的文章中详细分析，总之动态内存分配与字符串拷贝是肯定会发生的事情。值得一提的是，如果在构造函数里面至少会有如下操作：确定字符串长度（如strlen，遍历一遍字符串），按字符串长度（或者预留更多的长度）新建一块内存空间，拷贝字符串到新建的内存空间（第二次遍历字符串）。</li><li data-pid="_O8M2FfU"><b>std::string_view</b>：上面的汇编代码很简单，只是单纯设置静态字符串的起始指针和长度，没有其他调用，连内存分配都是栈上的！跟std::string相比，在创建std::string_view对象的时候，没有任何动态内存分配，没有对字符串多余的遍历。<b>一直以来，对于C字符串而言，如果需要获取它的长度，至少需要strlen之类的函数。但是我们似乎忽略了一点，那就是，如果是静态字符串，编译器其实是知道它的长度的，也就是，静态字符串的长度可以在编译期间确定，那就可以减少了很多问题。</b></li><li data-pid="yCADKJjg"><b>题外话</b>：编译期确定字符串长度、对象大小，这种并不是什么奇技淫巧，因为早在<code>operator new</code>运算符重载的时候，就有一个size_t参数，这个就是编译器传入的对象大小，而std::string_view，则是在编译期间传入字符串的指针和长度，构建对象。但是，std::string和std::string_view这两个类同时提供了<code>只带字符串指针</code>和<code>同时带字符串指针和字符串长度</code>两个版本的构造函数，默认的情况下，<code>std::string str = &#34;this is a static string!&#34;</code>会调用<code>basic_string( const CharT* s,const Allocator&amp; alloc = Allocator() )</code>构造，但是<code>std::string_view sv = &#34;this is a static string!&#34;</code>会调用带长度的<code>basic_string_view(const _CharT* __str, size_type __len) noexcept</code>版本，这一点我一直没弄明白(TODO)。但是，标准库提供了一个方法，可以让编译器选择带长度的std::string构造函数，下一小节讲述。</li></ul><h2>std::string_view的实现(GCC 8.2)</h2><p data-pid="Vtumzp6q">std::string_view类的成员变量只包含两个：字符串指针和字符串长度。字符串指针可能是某个连续字符串的其中一段的指针，而字符串长度也不一定是整个字符串长度，也有可能是某个字符串的一部分长度。std::string_view所实现的接口中，完全包含了std::string的所有<b>只读</b>的接口，所以在很多场合可以轻易使用std::string_view代替std::string。<b>一个通常的用法是，生成一个std::string后，如果后续的操作不再对其进行修改，那么可以考虑把std::string转换成为std::string_view，后续操作全部使用std::string_view来进行，这样字符串的传递变得轻量级。</b>虽然在很多实现上，std::string都使用引用计数进行COW方式管理，但是引用计数也会涉及锁和原子计数器，而std::string_view的拷贝只是单纯拷贝两个数值类型变量（字符串指针及其长度），效率上前者是远远无法相比的。<b>std::string_view高效的地方在于，它不管理内存，只保存指针和长度，所以对于只读字符串而言，查找和拷贝是相当简单的。</b>下面主要以笔记的形式，了解std::string_view的实现。 - 只读操作：没有std::string的c_str()函数。因为std::string_view管理的字符串可能只是一串长字符串中的一段，而c_str()函数的语义在于返回一个C风格的字符串，这会引起二义性，可能这就是设计者不提供这个接口的原因。但是与std::string一样提供了data()接口。对于std::string而言，data()与c_str()接口是一样的。std::string_view提供的data()接口只返回它所保存的数据指针，语义上是正确的。<b>在使用std::string_view的data()接口的时候，需要注意长度限制，例如<code>cout&lt;&lt;sv.data();</code>与<code>cout&lt;&lt;sv;</code>的输出结果很可能是不一样的，前者会多输出一部分字符。</b>  - std::string_view的前身，google的abseil::string_view的文档中有如下描述（<a href="https://link.zhihu.com/?target=https%3A//abseil.io/tips/1" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">abseil.io/tips/1</span><span class="invisible"></span></a>）： </p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-eacf799b836226d27be6d9b0bdc334ec_b.jpg" data-caption="" data-size="normal" data-rawwidth="1141" data-rawheight="545" class="origin_image zh-lightbox-thumb" width="1141" data-original="https://pic1.zhimg.com/v2-eacf799b836226d27be6d9b0bdc334ec_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1141&#39; height=&#39;545&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="1141" data-rawheight="545" class="origin_image zh-lightbox-thumb lazy" width="1141" data-original="https://pic1.zhimg.com/v2-eacf799b836226d27be6d9b0bdc334ec_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-eacf799b836226d27be6d9b0bdc334ec_b.jpg" data-original-token="v2-ec55a6dbb5d0382471a61970ab80098c"/></figure><p class="ztext-empty-paragraph"><br/></p><ul><li data-pid="Dw9w9WLJ">std::string_view与std::string的生成：C++17新增了<code>operator&#34;&#34;sv(const char* __str, size_t __len)</code>和<code>operator&#34;&#34;s(const char* __str, size_t __len)</code>操作符重载，因此，生成字符串的方法可以使用这两个操作符。<b>令人惊奇的是，使用这种方法，生成std::string调用的是<code>basic_string_view(const _CharT* __str, size_type __len) noexcept</code>版本的构造函数，这就意味着免去了构造时再一次获取字符串长度的开销（实际上是编译器在帮忙）</b></li></ul><div class="highlight"><pre><code class="language-cpp"><span class="c1">//std::string
</span><span class="c1"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="n">s</span><span class="p">;</span>

        <span class="c1">//std::string_view
</span><span class="c1"></span>        <span class="n">std</span><span class="o">::</span><span class="n">string_view</span> <span class="n">sv</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="n">sv</span><span class="p">;</span>
 <span class="err">```</span>
 <span class="err">反汇编如下（其实读者可以使用</span><span class="n">gdb调试</span><span class="err">，查看实际调用的构造函数）</span><span class="o">:</span>

 <span class="err">```</span><span class="n">cpp</span>

       <span class="c1">//std::string
</span><span class="c1"></span>       <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">str</span> <span class="o">=</span> <span class="s">&#34;this is a static string!&#34;</span><span class="n">s</span><span class="p">;</span>
       <span class="cp">## esi存放字符串起始地址，edx存放字符串长度，0x18就是字符串长度24字节
</span><span class="cp"></span>     <span class="mi">4014</span><span class="nl">b7</span><span class="p">:</span>   <span class="mi">48</span> <span class="mi">8</span><span class="n">d</span> <span class="mi">45</span> <span class="n">a0</span>             <span class="n">lea</span>    <span class="o">-</span><span class="mh">0x60</span><span class="p">(</span><span class="o">%</span><span class="n">rbp</span><span class="p">),</span><span class="o">%</span><span class="n">rax</span>
     <span class="mi">4014</span><span class="nl">bb</span><span class="p">:</span>   <span class="n">ba</span> <span class="mi">18</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span>          <span class="n">mov</span>    <span class="err">$</span><span class="mh">0x18</span><span class="p">,</span><span class="o">%</span><span class="n">edx</span>
     <span class="mi">4014</span><span class="nl">c0</span><span class="p">:</span>   <span class="n">be</span> <span class="mi">50</span> <span class="mi">1</span><span class="n">e</span> <span class="mi">40</span> <span class="mo">00</span>          <span class="n">mov</span>    <span class="err">$</span><span class="mh">0x401e50</span><span class="p">,</span><span class="o">%</span><span class="n">esi</span>
     <span class="mi">4014</span><span class="nl">c5</span><span class="p">:</span>   <span class="mi">48</span> <span class="mi">89</span> <span class="n">c7</span>                <span class="n">mov</span>    <span class="o">%</span><span class="n">rax</span><span class="p">,</span><span class="o">%</span><span class="n">rdi</span>
     <span class="mi">4014</span><span class="nl">c8</span><span class="p">:</span>   <span class="n">e8</span> <span class="n">da</span> <span class="mo">00</span> <span class="mo">00</span> <span class="mo">00</span>          <span class="n">callq</span>  <span class="mi">4015</span><span class="n">a7</span> <span class="o">&lt;</span><span class="n">_ZNSt8literals15string_literalsli1sB5cxx11EPKcm</span><span class="o">&gt;</span>
 <span class="err">```</span>

<span class="o">-</span> <span class="err">修改操作：如前所述，</span><span class="n">std</span><span class="o">::</span><span class="n">string_view并不提供修改接口</span><span class="err">，因为它保存的数据指针是`</span><span class="k">const</span> <span class="n">_CharT</span><span class="o">*</span><span class="err">`类型的，无法运行时修改。</span>
<span class="o">-</span> <span class="err">字符串截取</span><span class="n">substr</span><span class="p">()</span><span class="err">：这部分特别提出。因为使用</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">::</span><span class="n">substr</span><span class="p">()</span><span class="err">函数，会对所截取的部分生成一个新的字符串返回（中间又涉及内存动态分配以及拷贝），而</span><span class="n">std</span><span class="o">::</span><span class="n">string_view</span><span class="o">::</span><span class="n">substr</span><span class="p">()</span><span class="err">，也是返回一个</span><span class="n">std</span><span class="o">::</span><span class="n">string_view</span><span class="err">，但是依旧不涉及内存的动态分配。只是简单地用改变后的指针和长度生成一个新的</span><span class="n">std</span><span class="o">::</span><span class="n">string_view对象</span><span class="err">，</span><span class="n">O</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="err">操作。代码如下：</span>

<span class="err">```</span><span class="n">cpp</span>

  <span class="k">constexpr</span> <span class="n">basic_string_view</span>
  <span class="n">substr</span><span class="p">(</span><span class="n">size_type</span> <span class="n">__pos</span><span class="p">,</span> <span class="n">size_type</span> <span class="n">__n</span> <span class="o">=</span> <span class="n">npos</span><span class="p">)</span> <span class="k">const</span> <span class="k">noexcept</span><span class="p">(</span><span class="nb">false</span><span class="p">)</span>
  <span class="p">{</span>
<span class="n">__pos</span> <span class="o">=</span> <span class="n">_M_check</span><span class="p">(</span><span class="n">__pos</span><span class="p">,</span> <span class="s">&#34;basic_string_view::substr&#34;</span><span class="p">);</span>
<span class="k">const</span> <span class="n">size_type</span> <span class="n">__rlen</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">min</span><span class="p">(</span><span class="n">__n</span><span class="p">,</span> <span class="n">_M_len</span> <span class="o">-</span> <span class="n">__pos</span><span class="p">);</span>
<span class="k">return</span> <span class="n">basic_string_view</span><span class="p">{</span><span class="n">_M_str</span> <span class="o">+</span> <span class="n">__pos</span><span class="p">,</span> <span class="n">__rlen</span><span class="p">};</span>
  <span class="p">}</span>
</code></pre></div><ul><li data-pid="c0CtwB_Q">关于字符串截取，引用一下其他人的测试结果，性能提高不是一星半点。（来自<a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/tkokof1/article/details/82527370" class=" wrap external" target="_blank" rel="nofollow noreferrer">这里</a>） </li></ul><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-a0076e18a5b5e61a74dd1e24532385e6_b.jpg" data-caption="" data-size="normal" data-rawwidth="831" data-rawheight="325" class="origin_image zh-lightbox-thumb" width="831" data-original="https://pic3.zhimg.com/v2-a0076e18a5b5e61a74dd1e24532385e6_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;831&#39; height=&#39;325&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="831" data-rawheight="325" class="origin_image zh-lightbox-thumb lazy" width="831" data-original="https://pic3.zhimg.com/v2-a0076e18a5b5e61a74dd1e24532385e6_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-a0076e18a5b5e61a74dd1e24532385e6_b.jpg" data-original-token="v2-4f749b27d03b2073a3438ebf0ce29ff6"/></figure><p class="ztext-empty-paragraph"><br/></p><h2>使用注意事项</h2><p data-pid="pVnrlEQh">std::string_view/std::string用于项目中，我认为有下面几点需要注意的： - std::string_view管理的只是指针，试用期间应该注意指针所指向的内存是可访问的； - 如果使用静态字符串初始化std::string，建议使用<code>operator s()</code>重载，但是使用这个运算符重载需要使用<code>std::literals</code>，反正我经常会忘记。 - 如果在项目中需要使用下面这种方式生成字符串的：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
       <span class="c1">//process @num
</span><span class="c1"></span>      <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">err_message</span> <span class="o">=</span> <span class="s">&#34;Invalid Number: &#34;</span> <span class="o">+</span> <span class="n">std</span><span class="o">::</span><span class="n">to_string</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
</code></pre></div><p data-pid="MWSfcn6s">在c++11有可能会报错，因为 &#34;Invalid Number: &#34; 是一个<code>const char*</code>，无法使用<code>operator +(const std::string&amp;)</code>，或者改为</p><div class="highlight"><pre><code class="language-cpp"><span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">err_message</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">&#34;Invalid Number: &#34;</span><span class="p">)</span> <span class="o">+</span> <span class="n">std</span><span class="o">::</span><span class="n">to_string</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
</code></pre></div><p data-pid="SYHqSjRU">在C++17中，可以使用如下方法：</p><div class="highlight"><pre><code class="language-cpp"><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="o">::</span><span class="n">literals</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">err_message</span> <span class="o">=</span> <span class="s">&#34;Invalid Number: &#34;</span><span class="n">s</span> <span class="o">+</span> <span class="n">std</span><span class="o">::</span><span class="n">to_string</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
</code></pre></div><p data-pid="dsyuWaPe">这样，可以让编译器在构造时调用带长度的构造函数，免去一次使用<code>strlen</code>获取长度的开销。</p><h2>上古时代的std::string_view及其类似实现</h2><p data-pid="rB-gMnsP">所谓“上古时代”，指的是C++11之前的C++98时代，当时标准库还没有这么充实，开发时需要用到的一些库需要自己实现。那时候一些注重效率的程序就提供了这类的库作为附属实现。如： - <a href="https://link.zhihu.com/?target=https%3A//github.com/google/leveldb/blob/master/include/leveldb/slice.h" class=" wrap external" target="_blank" rel="nofollow noreferrer">LevelDB提供的Slice实现</a> - <a href="https://link.zhihu.com/?target=https%3A//github.com/facebook/rocksdb/blob/master/include/rocksdb/slice.h" class=" wrap external" target="_blank" rel="nofollow noreferrer">RocksDB提供的Slice实现</a>，这两者的实现原理大致一样，只是接口功能略有出入。 - <a href="https://link.zhihu.com/?target=https%3A//github.com/abseil/abseil-cpp/tree/master/absl/strings" class=" wrap external" target="_blank" rel="nofollow noreferrer">Google开源的基础库Abseil中的string_view</a>，据说这个库是C++17的string_view库的前身，浏览了一下似乎没有发现<code>operator sv()</code>的重载。</p><h2>我的项目中用到的std::string_view的类似实现：针对libhiredis</h2><p data-pid="a2tWf-5F">在上古时代，我的项目中也用到类似std::string_view这种“轻量级字符串”的功能，下面晒晒代码，说说使用这种设计的初衷。 在项目中，我需要用到redis库<a href="https://link.zhihu.com/?target=https%3A//github.com/redis/hiredis" class=" wrap external" target="_blank" rel="nofollow noreferrer">hiredis</a>，经常需要从库里面取得字符串。比如这样的操作：从redis中scan出一堆key，然后从redis中取出这些key，这些key-value有可能用于输出，有可能用于返回。hiredis是一个C库，快速而简单，然而我不希望在我的应用层库中处理太多细节（诸如分析返回数据的类型，然后又进行错误处理，等等），因为那样会造成大量重复代码（对返回数据的处理），而且会让应用层代码变得很臃肿。于是我自己写了一个简单的adaptor，实现了使用C++的string、vector等类作为参数对hiredis的调用。那么redis返回的字符串，如果封装成std::string，字符串的拷贝会成为瓶颈（因为项目中的value部分是一些稍长的字符串），而且这些来自redis的value返回到应用层只会做一些json解析、protobuf解析之类的操作就被释放掉，所以这就考虑到<b>字符串的拷贝和释放完全是重复劳动</b>，于是自己设计了一个基于RedisReply的Slice实现。 下面只贴出头文件，实现部分就不多贴出来占地方了（代码其实是使用C++11开发的，但是类似的实现可以在C++98中轻易做到，在这里作为一个例子并不过分=_=）：</p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//字符串
</span><span class="c1"></span>    <span class="c1">//创建这个类，是因为在性能调优的时候发现，生成字符串太多，影响性能
</span><span class="c1"></span>    <span class="k">class</span> <span class="nc">Slice</span>
    <span class="p">{</span>
    <span class="k">public</span><span class="o">:</span>
        <span class="n">Slice</span><span class="p">()</span> <span class="o">=</span> <span class="k">default</span><span class="p">;</span>
        <span class="o">~</span><span class="n">Slice</span><span class="p">()</span> <span class="o">=</span> <span class="k">default</span><span class="p">;</span>

        <span class="n">Slice</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">,</span> 
            <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">shared_ptr</span><span class="o">&lt;</span><span class="k">const</span> <span class="n">redisReply</span><span class="o">&gt;&amp;</span> <span class="n">reply</span><span class="p">)</span><span class="o">:</span> <span class="n">str_</span><span class="p">(</span><span class="n">str</span><span class="p">),</span> <span class="n">len_</span><span class="p">(</span><span class="n">len</span><span class="p">),</span> <span class="n">reply_</span><span class="p">(</span><span class="n">reply</span><span class="p">)</span> <span class="p">{}</span>
        <span class="n">Slice</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">len</span><span class="p">)</span><span class="o">:</span><span class="n">str_</span><span class="p">(</span><span class="n">str</span><span class="p">),</span> <span class="n">len_</span><span class="p">(</span><span class="n">len</span><span class="p">)</span> <span class="p">{}</span>

        <span class="c1">//下面几个接口，兼容std::string
</span><span class="c1"></span>        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">c_str</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span><span class="k">return</span> <span class="n">str_</span><span class="p">;}</span>
        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">data</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span><span class="k">return</span> <span class="n">str_</span><span class="p">;}</span>
        <span class="n">size_t</span> <span class="nf">length</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span><span class="k">return</span> <span class="n">len_</span><span class="p">;}</span>
        <span class="kt">bool</span> <span class="nf">empty</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span><span class="k">return</span> <span class="n">str_</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">||</span> <span class="n">len_</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;}</span>

        <span class="kt">bool</span> <span class="nf">begin_with</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">str</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">to_string</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="k">operator</span><span class="o">==</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">right</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="k">operator</span><span class="o">==</span><span class="p">(</span><span class="k">const</span> <span class="n">Slice</span><span class="o">&amp;</span> <span class="n">right</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="k">operator</span><span class="o">!=</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">right</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="k">operator</span><span class="o">!=</span><span class="p">(</span><span class="k">const</span> <span class="n">Slice</span><span class="o">&amp;</span> <span class="n">right</span><span class="p">)</span> <span class="k">const</span><span class="p">;</span>

    <span class="k">private</span><span class="o">:</span>

        <span class="c1">//字符串
</span><span class="c1"></span>        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">str_</span><span class="p">{</span><span class="nb">NULL</span><span class="p">};</span>
        <span class="n">size_t</span> <span class="n">len_</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>

        <span class="c1">//字符串所属的Redis返回报文
</span><span class="c1"></span>        <span class="n">std</span><span class="o">::</span><span class="n">shared_ptr</span><span class="o">&lt;</span><span class="k">const</span> <span class="n">redisReply</span><span class="o">&gt;</span> <span class="n">reply_</span><span class="p">;</span>
    <span class="p">};</span>
</code></pre></div><p data-pid="qGjVzUQn">之所以不重用LevelDB的Slice，是因为这些字符串都是<code>struct redisReply</code>中分配的，所以使用shared_ptr管理<code>struct redisReply</code>对象，这样就可以不需要担心<code>struct redisReply</code>的释放问题了。 为了这个类的使用方式兼容<code>std::string</code>、<code>Slice</code>，我使用模板实现，下面是我的Redis适配层的实现（局部）：</p><div class="highlight"><pre><code class="language-cpp"><span class="cm">/**********头文件************/</span>
    <span class="k">class</span> <span class="nc">CustomizedRedisClient</span>
    <span class="p">{</span>
    <span class="k">public</span><span class="o">:</span>
        <span class="c1">//GET
</span><span class="c1"></span>        <span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">StringType</span><span class="o">&gt;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">Status</span><span class="p">,</span> <span class="n">Slice</span><span class="o">&gt;</span> <span class="n">get</span><span class="p">(</span><span class="k">const</span> <span class="n">StringType</span><span class="o">&amp;</span> <span class="n">key</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">get_impl</span><span class="p">(</span><span class="n">key</span><span class="p">.</span><span class="n">data</span><span class="p">(),</span> <span class="n">key</span><span class="p">.</span><span class="n">length</span><span class="p">());</span>
        <span class="p">}</span>

        <span class="c1">//....
</span><span class="c1"></span>    <span class="p">};</span>

    <span class="cm">/***********这部分在代码部分实现***********/</span>

    <span class="c1">//GET实现
</span><span class="c1"></span>    <span class="c1">//CustomizedRedisClient::Status是另外实现的一个状态码，不在这里讲述
</span><span class="c1"></span>    <span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Status</span><span class="p">,</span> <span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Slice</span><span class="o">&gt;</span> 
        <span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">get_impl</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">key</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">key_len</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">constexpr</span> <span class="n">size_t</span> <span class="n">command_item_count</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">command_str</span><span class="p">[</span><span class="n">command_item_count</span><span class="p">];</span>
        <span class="n">size_t</span> <span class="n">command_len</span><span class="p">[</span><span class="n">command_item_count</span><span class="p">];</span>

        <span class="n">command_str</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#34;GET&#34;</span><span class="p">;</span>
        <span class="n">command_len</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>

        <span class="n">command_str</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">key</span><span class="p">;</span>
        <span class="n">command_len</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">key_len</span><span class="p">;</span>

        <span class="c1">//reply
</span><span class="c1"></span>        <span class="c1">//get_reply()函数使用redisAppendCommandArgv()和redisGetReply()函数实现，参考libhiredis文档，这样做是为了兼顾key/value中可能有二进制字符
</span><span class="c1"></span>        <span class="k">const</span> <span class="k">auto</span><span class="o">&amp;</span> <span class="n">reply_status</span> <span class="o">=</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">get_reply</span><span class="p">(</span><span class="n">command_str</span><span class="p">,</span> <span class="n">command_len</span><span class="p">,</span> <span class="n">command_item_count</span><span class="p">);</span>
        <span class="k">const</span> <span class="n">redisReply</span><span class="o">*</span> <span class="n">reply</span> <span class="o">=</span> <span class="n">reply_status</span><span class="p">.</span><span class="n">first</span><span class="p">.</span><span class="n">get</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="n">reply</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">make_pair</span><span class="p">(</span><span class="n">reply_status</span><span class="p">.</span><span class="n">second</span><span class="p">,</span> 
                <span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Slice</span><span class="p">());</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">reply</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">==</span> <span class="n">REDIS_REPLY_STATUS</span>
            <span class="o">||</span> <span class="n">reply</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">==</span> <span class="n">REDIS_REPLY_ERROR</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">make_pair</span><span class="p">(</span><span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Status</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="n">reply</span><span class="o">-&gt;</span><span class="n">str</span><span class="p">,</span> <span class="n">reply</span><span class="o">-&gt;</span><span class="n">len</span><span class="p">)),</span> 
                <span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Slice</span><span class="p">());</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">reply</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">==</span> <span class="n">REDIS_REPLY_NIL</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">make_pair</span><span class="p">(</span><span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Status</span><span class="p">(</span><span class="n">STATUS_NOT_FOUND</span><span class="p">),</span> 
                <span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Slice</span><span class="p">());</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">reply</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">!=</span> <span class="n">REDIS_REPLY_STRING</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">make_pair</span><span class="p">(</span><span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Status</span><span class="p">(</span><span class="n">STATUS_INVALID_MESSAGE</span><span class="p">),</span> 
                <span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Slice</span><span class="p">());</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="n">std</span><span class="o">::</span><span class="n">make_pair</span><span class="p">(</span><span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Status</span><span class="p">(),</span> 
            <span class="n">CustomizedRedisClient</span><span class="o">::</span><span class="n">Slice</span><span class="p">(</span><span class="n">reply</span><span class="o">-&gt;</span><span class="n">str</span><span class="p">,</span> <span class="n">reply</span><span class="o">-&gt;</span><span class="n">len</span><span class="p">,</span> <span class="n">reply_status</span><span class="p">.</span><span class="n">first</span><span class="p">));</span>
    <span class="p">}</span>
</code></pre></div><h2>后记</h2><p data-pid="2WqGHePv">追本溯源，是一个极客的优秀素质。 作为C++17文章的第一篇，略显啰嗦，希望以后有恒心把自己的研究成果一直进行下去。</p></div></div></div></div><div role="button" tabindex="0" class="ContentItem-time">发布于 2020-08-03 16:56</div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><style data-emotion-css="1s3a4zw">.css-1s3a4zw{position:relative;display:inline-block;height:30px;padding:0 12px;font-size:14px;line-height:30px;color:#056DE8;vertical-align:top;border-radius:100px;background:rgba(5,109,232,0.1);}.css-1s3a4zw:hover{background-color:rgba(5,109,232,0.15);}</style><div class="Tag Topic css-1s3a4zw"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/19601705" target="_blank"><style data-emotion-css="1xlfegr">.css-1xlfegr{background:transparent;box-shadow:none;}</style><style data-emotion-css="1gomreu">.css-1gomreu{position:relative;display:inline-block;}</style><div class="css-1gomreu">C / C++</div></a></span></div><div class="Tag Topic css-1s3a4zw"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/19584970" target="_blank"><div class="css-1gomreu">C++</div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-bottom"><div class="ContentItem-actions"><span><button aria-label="赞同 85 " aria-live="polite" type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor"><path fill-rule="evenodd" d="M13.792 3.681c-.781-1.406-2.803-1.406-3.584 0l-7.79 14.023c-.76 1.367.228 3.046 1.791 3.046h15.582c1.563 0 2.55-1.68 1.791-3.046l-7.79-14.023Z" clip-rule="evenodd"></path></svg></span>赞同 85</button><button aria-label="反对" aria-live="polite" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleDown" fill="currentColor"><path fill-rule="evenodd" d="M13.792 20.319c-.781 1.406-2.803 1.406-3.584 0L2.418 6.296c-.76-1.367.228-3.046 1.791-3.046h15.582c1.563 0 2.55 1.68 1.791 3.046l-7.79 14.023Z" clip-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button BottomActions-CommentBtn Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Comment Button-zi" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>8 条评论</button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Share Button-zi" fill="currentColor"><path d="M19.47 1.914a.8.8 0 0 1 1.204.778l-1.872 16.386a.9.9 0 0 1-1.204.743l-4.615-1.692a.7.7 0 0 0-.831.28l-1.927 3.02c-.43.674-1.474.369-1.474-.43v-3.865a.8.8 0 0 1 .179-.504l5.808-7.148a.595.595 0 0 0-.897-.781l-5.93 6.354a1.1 1.1 0 0 1-1.258.252L2.57 13.46a.8.8 0 0 1-.08-1.415l16.98-10.13Z"></path></svg></span>分享</button></div></div><button aria-live="polite" type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Heart Button-zi" fill="currentColor"><path fill-rule="evenodd" d="M12.004 4.934c1.015-.944 2.484-1.618 3.98-1.618 3.48 0 6.53 3.265 6.15 7.614-.11 1.254-.686 2.55-1.458 3.753-.778 1.215-1.79 2.392-2.845 3.419-1.054 1.028-2.168 1.923-3.161 2.566a9.96 9.96 0 0 1-1.41.777c-.418.182-.862.32-1.268.32s-.848-.137-1.267-.317a9.918 9.918 0 0 1-1.407-.771c-.992-.64-2.103-1.53-3.156-2.555-1.052-1.024-2.062-2.2-2.84-3.417-.77-1.208-1.346-2.51-1.456-3.775-.38-4.349 2.67-7.614 6.15-7.614 1.484 0 2.983.673 3.988 1.618Z" clip-rule="evenodd"></path></svg></span>喜欢</button><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Star Button-zi" fill="currentColor"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Deliver Button-zi" fill="currentColor"><g fill-rule="evenodd" clip-rule="evenodd"><path d="M7.821 12a.75.75 0 0 1 .75-.75h6.857a.75.75 0 0 1 0 1.5H8.571a.75.75 0 0 1-.75-.75ZM8.965 8a.75.75 0 0 1 .75-.75h4.571a.75.75 0 0 1 0 1.5H9.715a.75.75 0 0 1-.75-.75Z"></path><path d="M7.527 3.15a2.35 2.35 0 0 0-2.309 1.91L3.165 15.84a.85.85 0 0 0-.015.16v2.5a2.35 2.35 0 0 0 2.35 2.35h13a2.35 2.35 0 0 0 2.35-2.35V16a.848.848 0 0 0-.015-.16L18.78 5.06a2.35 2.35 0 0 0-2.308-1.91H7.527Zm0 1.7a.65.65 0 0 0-.639.528l-1.88 9.872h13.984l-1.88-9.872a.65.65 0 0 0-.64-.528H7.528Z"></path></g></svg></span>申请转载</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--iconOnly undefined"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Dots Button-zi" fill="currentColor"><path d="M5.165 13.665a1.665 1.665 0 1 0 0-3.33 1.665 1.665 0 0 0 0 3.33ZM13.665 12a1.665 1.665 0 1 1-3.33 0 1.665 1.665 0 0 1 3.33 0ZM18.835 13.665a1.665 1.665 0 1 0 0-3.33 1.665 1.665 0 0 0 0 3.33Z"></path></svg></span></button></div></div></div></div></div></div></article><div class="Post-Sub Post-NormalSub"><div class="PostIndex-Contributions"><h3 class="BlockTitle">文章被以下专栏收录</h3><ul><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="//www.zhihu.com/column/c_1273663489799233536"><div class="css-1gomreu"><style data-emotion-css="1any501">.css-1any501{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#FFFFFF;width:40px;height:40px;border-radius:50%;}</style><img class="Avatar css-1any501" src="https://picx.zhimg.com/4b70deef7_l.jpg?source=172ae18b" srcSet="https://picx.zhimg.com/4b70deef7_l.jpg?source=172ae18b 2x" alt="工匠之路"/></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="//www.zhihu.com/column/c_1273663489799233536"><div class="css-1gomreu">工匠之路</div></a></span></h2><div class="ContentItem-meta">在技术之路上努力前行，上下求索</div></div></div></div></ul></div></div></div></main></div></div><script id="js-clientConfig" type="text/json">{"fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","lens":"https:\u002F\u002Flens.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fapi\u002F","walletpay":"https:\u002F\u002Fwalletpay.zhihu.com","captcha":"https:\u002F\u002Fcaptcha.zhihu.com","vzuu":"https:\u002F\u002Fv.vzuu.com","openapi":"https:\u002F\u002Fopenapi.zhihu.com","svip":"https:\u002F\u002Fsvip.zhihu.com"},"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","videoHost":"video.zhihu.com","zhuanlanHost":"zhuanlan.zhihu.com","allowSignUp":true,"refreshValidityPeriod":"30","release":"950-d3d05887","currentEntry":"column","isMobileEntry":false,"apollo":{"env":"prod","globalSilence":"","ncgModeSign":"3f8e56febda4fb3bbea72e379d76de1e","topstory_rec_adp":"1","editor_adapt_native":"0","test_canary":"member|0-100,1-0","use_new_player":"member|0-0,1-100","player_vendor":"member|0-0,1-100,2-0","use_hevc":"member|0-0,1-100","upload_use_signature":"member|0-0,1-100","use_backdrop_blur":"member|0-0,1-100","article_title_imagex":"member|0-0,1-100","play_station":"member|0-50,1-50","contentItem_cover_imagex":"member|0-95,1-5"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{}},"loading":{"global":{"count":0},"local":{"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false,"article\u002FloadPostSearchEntity\u002F":false}},"entities":{"users":{"jencol-teng":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0.jpg?source=172ae18b","uid":"61672228126720","userType":"people","isFollowing":false,"urlToken":"jencol-teng","id":"9ffdac42812b7c9aabb5f5ead442cdef","description":"","name":"jencol teng","isAdvertiser":false,"headline":"专注后端开发，大数据，高并发，go\u002Fc++","gender":1,"url":"\u002Fpeople\u002F9ffdac42812b7c9aabb5f5ead442cdef","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b","isOrg":false,"type":"people","badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972475023013875712","medalName":"有口皆碑","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-eb56655cce39587eedeacb2824f6a116_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-eb56655cce39587eedeacb2824f6a116_l.png?source=172ae18b","description":"获得 50 个赞同","medalAvatarFrame":""}}},"questions":{},"answers":{},"articles":{"166359481":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fcontent_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=BiBUKF0xBSkqGGJ-QhvjYHlDBQ==&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__&zid=__ZONEID__"],"entityWords":[{"name":"析构函数","mention":"析构函数","matchorder":1,"begin":15961,"end":15965,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Math","score":0,"attachedInfoBytes":"sgJUCgzmnpDmnoTlh73mlbASBE1hdGgY2Xwg3XwoATUAAAAAOgdhcnRpY2xlQABIAFIkNDNhMmU2MzItYTk3Zi00YTljLTgzODUtYmU5YWFiZTFmMjJm","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"protobuf解析","mention":"protobuf解析","matchorder":1,"begin":35880,"end":35890,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJdCg5wcm90b2J1Zuino+aekBIJT3RoZXJUZXJtGKiYAiCymAIoATUAAAAAOgdhcnRpY2xlQABIAFIkNDNhMmU2MzItYTk3Zi00YTljLTgzODUtYmU5YWFiZTFmMjJm","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"return std","mention":"return std","matchorder":5,"begin":9903,"end":9913,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Math","score":0,"attachedInfoBytes":"sgJSCgpyZXR1cm4gc3RkEgRNYXRoGK9NILlNKAU1AAAAADoHYXJ0aWNsZUAASABSJDQzYTJlNjMyLWE5N2YtNGE5Yy04Mzg1LWJlOWFhYmUxZjIyZg==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"operator s","mention":"operator s","matchorder":1,"begin":32095,"end":32105,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Commodity","score":0,"attachedInfoBytes":"sgJZCgpvcGVyYXRvciBzEglDb21tb2RpdHkY3\u002FoBIOn6ASgBNQAAAAA6B2FydGljbGVAAEgAUiQ0M2EyZTYzMi1hOTdmLTRhOWMtODM4NS1iZTlhYWJlMWYyMmY=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"libhiredis","mention":"libhiredis","matchorder":1,"begin":35256,"end":35266,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Medical","score":0,"attachedInfoBytes":"sgJXCgpsaWJoaXJlZGlzEgdNZWRpY2FsGLiTAiDCkwIoATUAAAAAOgdhcnRpY2xlQABIAFIkNDNhMmU2MzItYTk3Zi00YTljLTgzODUtYmU5YWFiZTFmMjJm","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"memmove","mention":"memmove","matchorder":1,"begin":21372,"end":21379,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJWCgdtZW1tb3ZlEglPdGhlclRlcm0Y\u002FKYBIIOnASgBNQAAAAA6B2FydGljbGVAAEgAUiQ0M2EyZTYzMi1hOTdmLTRhOWMtODM4NS1iZTlhYWJlMWYyMmY=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"bool empty","mention":"bool empty","matchorder":1,"begin":7881,"end":7891,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Math","score":0,"attachedInfoBytes":"sgJSCgpib29sIGVtcHR5EgRNYXRoGMk9INM9KAE1AAAAADoHYXJ0aWNsZUAASABSJDQzYTJlNjMyLWE5N2YtNGE5Yy04Mzg1LWJlOWFhYmUxZjIyZg==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"eb 1a jmp 401463","mention":"eb 1a jmp 401463","matchorder":1,"begin":2578,"end":2594,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Commodity","score":0,"attachedInfoBytes":"sgJdChBlYiAxYSBqbXAgNDAxNDYzEglDb21tb2RpdHkYkhQgohQoATUAAAAAOgdhcnRpY2xlQABIAFIkNDNhMmU2MzItYTk3Zi00YTljLTgzODUtYmU5YWFiZTFmMjJm","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"bool operator","mention":"bool operator","matchorder":2,"begin":8056,"end":8069,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Commodity","score":0,"attachedInfoBytes":"sgJaCg1ib29sIG9wZXJhdG9yEglDb21tb2RpdHkY+D4ghT8oAjUAAAAAOgdhcnRpY2xlQABIAFIkNDNhMmU2MzItYTk3Zi00YTljLTgzODUtYmU5YWFiZTFmMjJm","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"vector","mention":"vector","matchorder":1,"begin":35754,"end":35760,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJVCgZ2ZWN0b3ISCU90aGVyVGVybRiqlwIgsJcCKAE1AAAAADoHYXJ0aWNsZUAASABSJDQzYTJlNjMyLWE5N2YtNGE5Yy04Mzg1LWJlOWFhYmUxZjIyZg==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""}],"id":166359481,"title":"C++17剖析：string_view的实现，以及性能","type":"article","articleType":"normal","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F166359481","imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-1ebdadcffde0d9a120919841a37b483b_720w.jpg?source=172ae18b","titleImage":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-1ebdadcffde0d9a120919841a37b483b_720w.jpg?source=172ae18b","excerpt":"\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-dfb89ab129b7419c2cd74bff7b3c5739_200x112.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"893\" data-rawheight=\"431\" data-watermark=\"watermark\" data-original-src=\"v2-dfb89ab129b7419c2cd74bff7b3c5739\" data-watermark-src=\"v2-46fba9e1ba99bd61fcf7d85fc9ddce26\" data-private-watermark-src=\"\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-dfb89ab129b7419c2cd74bff7b3c5739_r.png\"\u002F\u003E主要内容C++17标准发布，string_view是标准新增的内容。这篇文章主要分析string_view的适用范围、注意事项，并分析string_view带来的性能提升，最后从gcc 8.2的libstdc++库源码级别分析性能提升的原因。 背景知识：静态字符串的处理所谓静态字符串，就是编…","created":1596444973,"updated":1596444973,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0.jpg?source=172ae18b","uid":"61672228126720","userType":"people","isFollowing":false,"urlToken":"jencol-teng","id":"9ffdac42812b7c9aabb5f5ead442cdef","description":"","name":"jencol teng","isAdvertiser":false,"headline":"专注后端开发，大数据，高并发，go\u002Fc++","gender":1,"url":"\u002Fpeople\u002F9ffdac42812b7c9aabb5f5ead442cdef","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b","isOrg":false,"type":"people","badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972475023013875712","medalName":"有口皆碑","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-eb56655cce39587eedeacb2824f6a116_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-eb56655cce39587eedeacb2824f6a116_l.png?source=172ae18b","description":"获得 50 个赞同","medalAvatarFrame":""}},"commentPermission":"all","copyrightPermission":"need_review","state":"published","ipInfo":"","imageWidth":500,"imageHeight":375,"content":"\u003Ch2\u003E主要内容\u003C\u002Fh2\u003E\u003Cp data-pid=\"VtNipygB\"\u003EC++17标准发布，string_view是标准新增的内容。这篇文章主要分析string_view的适用范围、注意事项，并分析string_view带来的性能提升，最后从gcc 8.2的libstdc++库源码级别分析性能提升的原因。 \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-46fba9e1ba99bd61fcf7d85fc9ddce26_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"893\" data-rawheight=\"431\" class=\"origin_image zh-lightbox-thumb\" width=\"893\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-46fba9e1ba99bd61fcf7d85fc9ddce26_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;893&#39; height=&#39;431&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"893\" data-rawheight=\"431\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"893\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-46fba9e1ba99bd61fcf7d85fc9ddce26_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-46fba9e1ba99bd61fcf7d85fc9ddce26_b.jpg\" data-original-token=\"v2-dfb89ab129b7419c2cd74bff7b3c5739\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E背景知识：静态字符串的处理\u003C\u002Fh2\u003E\u003Cp data-pid=\"-IWthI3y\"\u003E所谓静态字符串，就是编译时已经固定的字符串，他们存储在二进制文件的静态存储区，而且程序只能读取，不能改动。 一个例子：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F指针指向静态字符串\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_ptr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F字符串数组\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_array\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string_view\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esv\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"Mg99Pf-Z\"\u003E反汇编：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eg++ -O0 -o static_str static_str.cc -std=c++17 -g &amp;&amp; objdump -S -t -D static_str &gt; static_str.s\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"MuLWQVzX\"\u003E汇编代码如下：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eb8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E55\u003C\u002Fspan\u003E                      \u003Cspan class=\"n\"\u003Epush\u003C\u002Fspan\u003E   \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eb9\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee5\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ersp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ebc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E53\u003C\u002Fspan\u003E                      \u003Cspan class=\"n\"\u003Epush\u003C\u002Fspan\u003E   \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbx\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ebd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E83\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eec\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E68\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Esub\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x68\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ersp\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F指针指向静态字符串\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_ptr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"cp\"\u003E##直接设置字符串指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E30\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E40\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003Emovq\u003C\u002Fspan\u003E   \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x401e30\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x18\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E  \n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F字符串数组\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_array\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"cp\"\u003E##这里使用一个很取巧的办法，不使用循环，而是使用多个mov语句把字符串设置到堆栈\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec9\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eb8\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E74\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E68\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E69\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E73\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E20\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x2073692073696874\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E \n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ed0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E69\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E73\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E20\u003C\u002Fspan\u003E \n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ed3\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eba\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E61\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E20\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E73\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E74\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E61\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x6369746174732061\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdx\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eda\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E74\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E69\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E63\u003C\u002Fspan\u003E \n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Edd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec0\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x40\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mf\"\u003E4013e1\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E55\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec8\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdx\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x38\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mf\"\u003E4013e5\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eb8\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E20\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E73\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E74\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E72\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E69\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x21676e6972747320\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eec\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E6\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E67\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E21\u003C\u002Fspan\u003E \n  \u003Cspan class=\"mi\"\u003E4013\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eef\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ed0\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x30\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mf\"\u003E4013f\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ec6\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ed8\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Emovb\u003C\u002Fspan\u003E   \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x28\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"cp\"\u003E#esi保存了字符串开始地址$0x401e30,调用std::string的构造函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E  \u003Cspan class=\"mf\"\u003E4013f\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E7\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ed\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee7\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Elea\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x19\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mf\"\u003E4013f\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdi\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mf\"\u003E4013f\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ee\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E15\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efe\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Ecallq\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E401218\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_ZNSaIcEC1Ev\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eplt\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401403\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ed\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E55\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee7\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Elea\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x19\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdx\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401407\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ed\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ea0\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Elea\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x60\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E40140\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ebe\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E30\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E40\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x401e30\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eesi\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401410\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdi\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401413\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efe\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E01\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Ecallq\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E401616\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401418\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ed\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee7\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Elea\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x19\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E40141\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdi\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mf\"\u003E40141f\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec4\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efd\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Ecallq\u003C\u002Fspan\u003E  \u003Cspan class=\"mf\"\u003E4011e8\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_ZNSaIcED1Ev\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eplt\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string_view\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esv\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"cp\"\u003E#直接设置字符串的长度0x18，也就是24Bytes，还有字符串的起始指针$0x401e30，没有堆内存分配\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E401424\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E90\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E18\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003Emovq\u003C\u002Fspan\u003E   \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x18\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x70\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E40142\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \n  \u003Cspan class=\"mi\"\u003E40142\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E98\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E30\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E40\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003Emovq\u003C\u002Fspan\u003E   \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x401e30\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x68\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401433\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \n\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401434\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ebb\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eebx\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F字符串数组\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"cp\"\u003E## 对象析构：字符串数组分配在栈上，无需析构\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_array\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"cp\"\u003E## 对象析构：调用析构函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401439\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ed\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ea0\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Elea\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x60\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E40143\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ed\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdi\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401440\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ea9\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E01\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Ecallq\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E4015\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eee\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401445\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ed8\u003C\u002Fspan\u003E                   \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eebx\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eeax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401447\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Eeb\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ea\u003C\u002Fspan\u003E                   \u003Cspan class=\"n\"\u003Ejmp\u003C\u002Fspan\u003E    \u003Cspan class=\"mi\"\u003E401463\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0xab\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401449\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec3\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbx\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E40144\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ed\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee7\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Elea\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x19\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401450\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdi\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401453\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E90\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efd\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Ecallq\u003C\u002Fspan\u003E  \u003Cspan class=\"mf\"\u003E4011e8\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_ZNSaIcED1Ev\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eplt\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E401458\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ed8\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbx\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E40145\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdi\u003C\u002Fspan\u003E\n  \u003Cspan class=\"mi\"\u003E40145\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ee\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee5\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efd\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eff\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Ecallq\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E401248\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_Unwind_Resume\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eplt\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string_view\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"cp\"\u003E## 对象析构：std::string_view分配在栈上，无需析构\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esv\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cul\u003E\u003Cli data-pid=\"eVisiGX4\"\u003E\u003Cb\u003E静态字符串\u003C\u002Fb\u003E：会把指针指向静态存储区，字符串只读。如果尝试修改，会导致段错误（segment fault）。\u003C\u002Fli\u003E\u003Cli data-pid=\"46qp30u8\"\u003E\u003Cb\u003E字符串数组\u003C\u002Fb\u003E：在栈上分配一块空间，长度等于字符串的长度+1（因为还需要包括末尾的&#39;\\0&#39;字符），然后把字符串拷贝到缓冲区。上述代码，我之前一直以为会使用循环（类似memmove），但是一直找不到循环的语句，却找到一堆莫名其妙的数字（$0x2073692073696874，$0x6369746174732061）仔细观察发现，原来编译器把一个长字符串分开为几个64bit的长整数，逐次mov到栈缓冲区中， 那几个长长的整数其实是： 0x2073692073696874=[ si siht]，$0x6369746174732061=[citats a]，0x21676e6972747320=[!gnirts]，刚好就是字符串的反序，编译器是用这种方式来提高运行效率的。\u003Cb\u003E我觉得其实末尾的0是可以和字符串一起写在同一个mov指令中的，这样执行的指令就可以少一个了，不知道为什么不这样做。\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"tS2l4uBR\"\u003E\u003Cb\u003Estd::string\u003C\u002Fb\u003E：只在寄存器设置了字符串的起始指针，调用了\u003Ccode\u003Ebasic_string( const CharT* s,const Allocator&amp; alloc = Allocator() )\u003C\u002Fcode\u003E构造函数，中间涉及各种检测和字符串拷贝，后面会在另一篇讲述std::string原理的文章中详细分析，总之动态内存分配与字符串拷贝是肯定会发生的事情。值得一提的是，如果在构造函数里面至少会有如下操作：确定字符串长度（如strlen，遍历一遍字符串），按字符串长度（或者预留更多的长度）新建一块内存空间，拷贝字符串到新建的内存空间（第二次遍历字符串）。\u003C\u002Fli\u003E\u003Cli data-pid=\"_O8M2FfU\"\u003E\u003Cb\u003Estd::string_view\u003C\u002Fb\u003E：上面的汇编代码很简单，只是单纯设置静态字符串的起始指针和长度，没有其他调用，连内存分配都是栈上的！跟std::string相比，在创建std::string_view对象的时候，没有任何动态内存分配，没有对字符串多余的遍历。\u003Cb\u003E一直以来，对于C字符串而言，如果需要获取它的长度，至少需要strlen之类的函数。但是我们似乎忽略了一点，那就是，如果是静态字符串，编译器其实是知道它的长度的，也就是，静态字符串的长度可以在编译期间确定，那就可以减少了很多问题。\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"yCADKJjg\"\u003E\u003Cb\u003E题外话\u003C\u002Fb\u003E：编译期确定字符串长度、对象大小，这种并不是什么奇技淫巧，因为早在\u003Ccode\u003Eoperator new\u003C\u002Fcode\u003E运算符重载的时候，就有一个size_t参数，这个就是编译器传入的对象大小，而std::string_view，则是在编译期间传入字符串的指针和长度，构建对象。但是，std::string和std::string_view这两个类同时提供了\u003Ccode\u003E只带字符串指针\u003C\u002Fcode\u003E和\u003Ccode\u003E同时带字符串指针和字符串长度\u003C\u002Fcode\u003E两个版本的构造函数，默认的情况下，\u003Ccode\u003Estd::string str = &#34;this is a static string!&#34;\u003C\u002Fcode\u003E会调用\u003Ccode\u003Ebasic_string( const CharT* s,const Allocator&amp; alloc = Allocator() )\u003C\u002Fcode\u003E构造，但是\u003Ccode\u003Estd::string_view sv = &#34;this is a static string!&#34;\u003C\u002Fcode\u003E会调用带长度的\u003Ccode\u003Ebasic_string_view(const _CharT* __str, size_type __len) noexcept\u003C\u002Fcode\u003E版本，这一点我一直没弄明白(TODO)。但是，标准库提供了一个方法，可以让编译器选择带长度的std::string构造函数，下一小节讲述。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch2\u003Estd::string_view的实现(GCC 8.2)\u003C\u002Fh2\u003E\u003Cp data-pid=\"Vtumzp6q\"\u003Estd::string_view类的成员变量只包含两个：字符串指针和字符串长度。字符串指针可能是某个连续字符串的其中一段的指针，而字符串长度也不一定是整个字符串长度，也有可能是某个字符串的一部分长度。std::string_view所实现的接口中，完全包含了std::string的所有\u003Cb\u003E只读\u003C\u002Fb\u003E的接口，所以在很多场合可以轻易使用std::string_view代替std::string。\u003Cb\u003E一个通常的用法是，生成一个std::string后，如果后续的操作不再对其进行修改，那么可以考虑把std::string转换成为std::string_view，后续操作全部使用std::string_view来进行，这样字符串的传递变得轻量级。\u003C\u002Fb\u003E虽然在很多实现上，std::string都使用引用计数进行COW方式管理，但是引用计数也会涉及锁和原子计数器，而std::string_view的拷贝只是单纯拷贝两个数值类型变量（字符串指针及其长度），效率上前者是远远无法相比的。\u003Cb\u003Estd::string_view高效的地方在于，它不管理内存，只保存指针和长度，所以对于只读字符串而言，查找和拷贝是相当简单的。\u003C\u002Fb\u003E下面主要以笔记的形式，了解std::string_view的实现。 - 只读操作：没有std::string的c_str()函数。因为std::string_view管理的字符串可能只是一串长字符串中的一段，而c_str()函数的语义在于返回一个C风格的字符串，这会引起二义性，可能这就是设计者不提供这个接口的原因。但是与std::string一样提供了data()接口。对于std::string而言，data()与c_str()接口是一样的。std::string_view提供的data()接口只返回它所保存的数据指针，语义上是正确的。\u003Cb\u003E在使用std::string_view的data()接口的时候，需要注意长度限制，例如\u003Ccode\u003Ecout&lt;&lt;sv.data();\u003C\u002Fcode\u003E与\u003Ccode\u003Ecout&lt;&lt;sv;\u003C\u002Fcode\u003E的输出结果很可能是不一样的，前者会多输出一部分字符。\u003C\u002Fb\u003E  - std::string_view的前身，google的abseil::string_view的文档中有如下描述（\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fabseil.io\u002Ftips\u002F1\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003E\u003Cspan class=\"invisible\"\u003Ehttps:\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"visible\"\u003Eabseil.io\u002Ftips\u002F1\u003C\u002Fspan\u003E\u003Cspan class=\"invisible\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E）： \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-eacf799b836226d27be6d9b0bdc334ec_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1141\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb\" width=\"1141\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-eacf799b836226d27be6d9b0bdc334ec_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;1141&#39; height=&#39;545&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1141\" data-rawheight=\"545\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1141\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-eacf799b836226d27be6d9b0bdc334ec_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-eacf799b836226d27be6d9b0bdc334ec_b.jpg\" data-original-token=\"v2-ec55a6dbb5d0382471a61970ab80098c\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"Dw9w9WLJ\"\u003Estd::string_view与std::string的生成：C++17新增了\u003Ccode\u003Eoperator&#34;&#34;sv(const char* __str, size_t __len)\u003C\u002Fcode\u003E和\u003Ccode\u003Eoperator&#34;&#34;s(const char* __str, size_t __len)\u003C\u002Fcode\u003E操作符重载，因此，生成字符串的方法可以使用这两个操作符。\u003Cb\u003E令人惊奇的是，使用这种方法，生成std::string调用的是\u003Ccode\u003Ebasic_string_view(const _CharT* __str, size_type __len) noexcept\u003C\u002Fcode\u003E版本的构造函数，这就意味着免去了构造时再一次获取字符串长度的开销（实际上是编译器在帮忙）\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Es\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string_view\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esv\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esv\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n \u003Cspan class=\"err\"\u003E```\u003C\u002Fspan\u003E\n \u003Cspan class=\"err\"\u003E反汇编如下（其实读者可以使用\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Egdb调试\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E，查看实际调用的构造函数）\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n\n \u003Cspan class=\"err\"\u003E```\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecpp\u003C\u002Fspan\u003E\n\n       \u003Cspan class=\"c1\"\u003E\u002F\u002Fstd::string\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E       \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;this is a static string!&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Es\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n       \u003Cspan class=\"cp\"\u003E## esi存放字符串起始地址，edx存放字符串长度，0x18就是字符串长度24字节\n\u003C\u002Fspan\u003E\u003Cspan class=\"cp\"\u003E\u003C\u002Fspan\u003E     \u003Cspan class=\"mi\"\u003E4014\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eb7\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E   \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ed\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E45\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ea0\u003C\u002Fspan\u003E             \u003Cspan class=\"n\"\u003Elea\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x60\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erbp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\n     \u003Cspan class=\"mi\"\u003E4014\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ebb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E   \u003Cspan class=\"n\"\u003Eba\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E18\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x18\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eedx\u003C\u002Fspan\u003E\n     \u003Cspan class=\"mi\"\u003E4014\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E   \u003Cspan class=\"n\"\u003Ebe\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E50\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E40\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x401e50\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eesi\u003C\u002Fspan\u003E\n     \u003Cspan class=\"mi\"\u003E4014\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec5\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E   \u003Cspan class=\"mi\"\u003E48\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E89\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec7\u003C\u002Fspan\u003E                \u003Cspan class=\"n\"\u003Emov\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erdi\u003C\u002Fspan\u003E\n     \u003Cspan class=\"mi\"\u003E4014\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Ec8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E   \u003Cspan class=\"n\"\u003Ee8\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eda\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E \u003Cspan class=\"mo\"\u003E00\u003C\u002Fspan\u003E          \u003Cspan class=\"n\"\u003Ecallq\u003C\u002Fspan\u003E  \u003Cspan class=\"mi\"\u003E4015\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ea7\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_ZNSt8literals15string_literalsli1sB5cxx11EPKcm\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n \u003Cspan class=\"err\"\u003E```\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E修改操作：如前所述，\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view并不提供修改接口\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E，因为它保存的数据指针是`\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E_CharT\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E`类型的，无法运行时修改。\u003C\u002Fspan\u003E\n\u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E字符串截取\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esubstr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E：这部分特别提出。因为使用\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esubstr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E函数，会对所截取的部分生成一个新的字符串返回（中间又涉及内存动态分配以及拷贝），而\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esubstr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E，也是返回一个\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E，但是依旧不涉及内存的动态分配。只是简单地用改变后的指针和长度生成一个新的\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring_view对象\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E，\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E操作。代码如下：\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"err\"\u003E```\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecpp\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"k\"\u003Econstexpr\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ebasic_string_view\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Esubstr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esize_type\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__pos\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_type\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__n\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Enpos\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enoexcept\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003E__pos\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E_M_check\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E__pos\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;basic_string_view::substr&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_type\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__rlen\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E__n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E_M_len\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__pos\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ebasic_string_view\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E_M_str\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__pos\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__rlen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cul\u003E\u003Cli data-pid=\"c0CtwB_Q\"\u003E关于字符串截取，引用一下其他人的测试结果，性能提高不是一星半点。（来自\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fblog.csdn.net\u002Ftkokof1\u002Farticle\u002Fdetails\u002F82527370\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003E这里\u003C\u002Fa\u003E） \u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-a0076e18a5b5e61a74dd1e24532385e6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"831\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb\" width=\"831\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-a0076e18a5b5e61a74dd1e24532385e6_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;831&#39; height=&#39;325&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"831\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"831\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-a0076e18a5b5e61a74dd1e24532385e6_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-a0076e18a5b5e61a74dd1e24532385e6_b.jpg\" data-original-token=\"v2-4f749b27d03b2073a3438ebf0ce29ff6\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E使用注意事项\u003C\u002Fh2\u003E\u003Cp data-pid=\"pVnrlEQh\"\u003Estd::string_view\u002Fstd::string用于项目中，我认为有下面几点需要注意的： - std::string_view管理的只是指针，试用期间应该注意指针所指向的内存是可访问的； - 如果使用静态字符串初始化std::string，建议使用\u003Ccode\u003Eoperator s()\u003C\u002Fcode\u003E重载，但是使用这个运算符重载需要使用\u003Ccode\u003Estd::literals\u003C\u002Fcode\u003E，反正我经常会忘记。 - 如果在项目中需要使用下面这种方式生成字符串的：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Enum\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E100\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n       \u003Cspan class=\"c1\"\u003E\u002F\u002Fprocess @num\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E      \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eerr_message\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;Invalid Number: &#34;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eto_string\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Enum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"MWSfcn6s\"\u003E在c++11有可能会报错，因为 &#34;Invalid Number: &#34; 是一个\u003Ccode\u003Econst char*\u003C\u002Fcode\u003E，无法使用\u003Ccode\u003Eoperator +(const std::string&amp;)\u003C\u002Fcode\u003E，或者改为\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eerr_message\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;Invalid Number: &#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eto_string\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Enum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"SYHqSjRU\"\u003E在C++17中，可以使用如下方法：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"k\"\u003Eusing\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enamespace\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eliterals\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eerr_message\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;Invalid Number: &#34;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Es\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eto_string\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Enum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"dsyuWaPe\"\u003E这样，可以让编译器在构造时调用带长度的构造函数，免去一次使用\u003Ccode\u003Estrlen\u003C\u002Fcode\u003E获取长度的开销。\u003C\u002Fp\u003E\u003Ch2\u003E上古时代的std::string_view及其类似实现\u003C\u002Fh2\u003E\u003Cp data-pid=\"rB-gMnsP\"\u003E所谓“上古时代”，指的是C++11之前的C++98时代，当时标准库还没有这么充实，开发时需要用到的一些库需要自己实现。那时候一些注重效率的程序就提供了这类的库作为附属实现。如： - \u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fgoogle\u002Fleveldb\u002Fblob\u002Fmaster\u002Finclude\u002Fleveldb\u002Fslice.h\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003ELevelDB提供的Slice实现\u003C\u002Fa\u003E - \u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Ffacebook\u002Frocksdb\u002Fblob\u002Fmaster\u002Finclude\u002Frocksdb\u002Fslice.h\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003ERocksDB提供的Slice实现\u003C\u002Fa\u003E，这两者的实现原理大致一样，只是接口功能略有出入。 - \u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fabseil\u002Fabseil-cpp\u002Ftree\u002Fmaster\u002Fabsl\u002Fstrings\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003EGoogle开源的基础库Abseil中的string_view\u003C\u002Fa\u003E，据说这个库是C++17的string_view库的前身，浏览了一下似乎没有发现\u003Ccode\u003Eoperator sv()\u003C\u002Fcode\u003E的重载。\u003C\u002Fp\u003E\u003Ch2\u003E我的项目中用到的std::string_view的类似实现：针对libhiredis\u003C\u002Fh2\u003E\u003Cp data-pid=\"a2tWf-5F\"\u003E在上古时代，我的项目中也用到类似std::string_view这种“轻量级字符串”的功能，下面晒晒代码，说说使用这种设计的初衷。 在项目中，我需要用到redis库\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fgithub.com\u002Fredis\u002Fhiredis\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003Ehiredis\u003C\u002Fa\u003E，经常需要从库里面取得字符串。比如这样的操作：从redis中scan出一堆key，然后从redis中取出这些key，这些key-value有可能用于输出，有可能用于返回。hiredis是一个C库，快速而简单，然而我不希望在我的应用层库中处理太多细节（诸如分析返回数据的类型，然后又进行错误处理，等等），因为那样会造成大量重复代码（对返回数据的处理），而且会让应用层代码变得很臃肿。于是我自己写了一个简单的adaptor，实现了使用C++的string、vector等类作为参数对hiredis的调用。那么redis返回的字符串，如果封装成std::string，字符串的拷贝会成为瓶颈（因为项目中的value部分是一些稍长的字符串），而且这些来自redis的value返回到应用层只会做一些json解析、protobuf解析之类的操作就被释放掉，所以这就考虑到\u003Cb\u003E字符串的拷贝和释放完全是重复劳动\u003C\u002Fb\u003E，于是自己设计了一个基于RedisReply的Slice实现。 下面只贴出头文件，实现部分就不多贴出来占地方了（代码其实是使用C++11开发的，但是类似的实现可以在C++98中轻易做到，在这里作为一个例子并不过分=_=）：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F字符串\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F创建这个类，是因为在性能调优的时候发现，生成字符串太多，影响性能\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ESlice\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"o\"\u003E~\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Elen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n            \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eshared_ptr\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EredisReply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Elen_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Elen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estr_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Elen_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{}\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F下面几个接口，兼容std::string\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Ec_str\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Elength\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Elen_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Eempty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Elen_\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Ebegin_with\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eto_string\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoperator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eright\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoperator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eright\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoperator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eright\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoperator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eright\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Eprivate\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F字符串\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estr_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Elen_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F字符串所属的Redis返回报文\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eshared_ptr\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EredisReply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"qGjVzUQn\"\u003E之所以不重用LevelDB的Slice，是因为这些字符串都是\u003Ccode\u003Estruct redisReply\u003C\u002Fcode\u003E中分配的，所以使用shared_ptr管理\u003Ccode\u003Estruct redisReply\u003C\u002Fcode\u003E对象，这样就可以不需要担心\u003Ccode\u003Estruct redisReply\u003C\u002Fcode\u003E的释放问题了。 为了这个类的使用方式兼容\u003Ccode\u003Estd::string\u003C\u002Fcode\u003E、\u003Ccode\u003ESlice\u003C\u002Fcode\u003E，我使用模板实现，下面是我的Redis适配层的实现（局部）：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"cm\"\u003E\u002F**********头文件************\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c1\"\u003E\u002F\u002FGET\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Etemplate\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EStringType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Epair\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStatus\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EStringType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eget_impl\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elength\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F....\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"cm\"\u003E\u002F***********这部分在代码部分实现***********\u002F\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c1\"\u003E\u002F\u002FGET实现\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002FCustomizedRedisClient::Status是另外实现的一个状态码，不在这里讲述\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Epair\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStatus\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \n        \u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eget_impl\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ekey_len\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Econstexpr\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ecommand_item_count\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ecommand_str\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecommand_item_count\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E];\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ecommand_len\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecommand_item_count\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E];\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"n\"\u003Ecommand_str\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;GET&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Ecommand_len\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"n\"\u003Ecommand_str\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Ecommand_len\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ekey_len\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Freply\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"c1\"\u003E\u002F\u002Fget_reply()函数使用redisAppendCommandArgv()和redisGetReply()函数实现，参考libhiredis文档，这样做是为了兼顾key\u002Fvalue中可能有二进制字符\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eauto\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply_status\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eget_reply\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecommand_str\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ecommand_len\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ecommand_item_count\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EredisReply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply_status\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Efirst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emake_pair\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply_status\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esecond\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n                \u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Eif\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EREDIS_REPLY_STATUS\u003C\u002Fspan\u003E\n            \u003Cspan class=\"o\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EREDIS_REPLY_ERROR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emake_pair\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStatus\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)),\u003C\u002Fspan\u003E \n                \u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Eif\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EREDIS_REPLY_NIL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emake_pair\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStatus\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESTATUS_NOT_FOUND\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \n                \u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Eif\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EREDIS_REPLY_STRING\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emake_pair\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStatus\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESTATUS_INVALID_MESSAGE\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \n                \u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estd\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emake_pair\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStatus\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \n            \u003Cspan class=\"n\"\u003ECustomizedRedisClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESlice\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereply_status\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Efirst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2\u003E后记\u003C\u002Fh2\u003E\u003Cp data-pid=\"2WqGHePv\"\u003E追本溯源，是一个极客的优秀素质。 作为C++17文章的第一篇，略显啰嗦，希望以后有恒心把自己的研究成果一直进行下去。\u003C\u002Fp\u003E","adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19601705","type":"topic","id":"19601705","name":"C \u002F C++"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19584970","type":"topic","id":"19584970","name":"C++"}],"voteupCount":85,"voting":0,"heavyUpStatus":"allow_heavy_up","column":{"description":"","canManage":false,"intro":"在技术之路上努力前行，上下求索","isFollowing":false,"urlToken":"c_1273663489799233536","id":"c_1273663489799233536","articlesCount":3,"acceptSubmission":false,"title":"工匠之路","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1273663489799233536","commentPermission":"all","created":1596445039,"updated":1596445039,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002F4b70deef7_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0.jpg?source=172ae18b","uid":"61672228126720","userType":"people","isFollowing":false,"urlToken":"jencol-teng","id":"9ffdac42812b7c9aabb5f5ead442cdef","description":"","name":"jencol teng","isAdvertiser":false,"headline":"专注后端开发，大数据，高并发，go\u002Fc++","gender":1,"url":"\u002Fpeople\u002F9ffdac42812b7c9aabb5f5ead442cdef","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":6,"type":"column"},"commentCount":8,"contributions":[{"id":25404186,"state":"accepted","type":"first_publish","column":{"description":"","canManage":false,"intro":"在技术之路上努力前行，上下求索","isFollowing":false,"urlToken":"c_1273663489799233536","id":"c_1273663489799233536","articlesCount":3,"acceptSubmission":false,"title":"工匠之路","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1273663489799233536","commentPermission":"all","created":1596445039,"updated":1596445039,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002F4b70deef7_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0.jpg?source=172ae18b","uid":"61672228126720","userType":"people","isFollowing":false,"urlToken":"jencol-teng","id":"9ffdac42812b7c9aabb5f5ead442cdef","description":"","name":"jencol teng","isAdvertiser":false,"headline":"专注后端开发，大数据，高并发，go\u002Fc++","gender":1,"url":"\u002Fpeople\u002F9ffdac42812b7c9aabb5f5ead442cdef","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":6,"type":"column"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":false,"tipjarorsCount":0,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"favlistsCount":85,"isNormal":true,"status":0,"activityToppingInfo":{"state":"untopped"},"shareText":"C++17剖析：string_view的实现，以及性能 - 来自知乎专栏「工匠之路」，作者: jencol teng https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F166359481 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":8,"hasColumn":true,"republishers":[],"isNewLinkCard":true,"emojiReaction":{"likeCount":8,"likeHasSet":false},"abParam":{"qaHiddenVoteup":"1","rsInterest1":""},"attachedInfo":"kgIkCgkxMjUxMDI0ODQSCTE2NjM1OTQ4MRgHIgpJTUFHRV9URVhU","shareGuide":{"hasPositiveBubble":false,"hasTimeBubble":false,"hitShareGuideCluster":false},"settings":{"tableOfContents":{"enabled":false}},"canReference":false,"reactionInstruction":{}}},"columns":{"c_1273663489799233536":{"description":"","canManage":false,"intro":"在技术之路上努力前行，上下求索","isFollowing":false,"urlToken":"c_1273663489799233536","id":"c_1273663489799233536","articlesCount":3,"acceptSubmission":false,"title":"工匠之路","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1273663489799233536","commentPermission":"all","created":1596445039,"updated":1596445039,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002F4b70deef7_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0.jpg?source=172ae18b","uid":"61672228126720","userType":"people","isFollowing":false,"urlToken":"jencol-teng","id":"9ffdac42812b7c9aabb5f5ead442cdef","description":"","name":"jencol teng","isAdvertiser":false,"headline":"专注后端开发，大数据，高并发，go\u002Fc++","gender":1,"url":"\u002Fpeople\u002F9ffdac42812b7c9aabb5f5ead442cdef","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f6500c0abba483a584d5149b93907df0_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":6,"type":"column"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"zvideos":{},"zvideoContributions":{},"briefs":{},"eduCourses":{}},"currentUser":"","account":{"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false},"cardUserInfo":{"vipInfo":{}},"handleWidget":{},"widgetList":[],"userWidgetId":""},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{},"infinity":{},"batchUsers":{},"profileInfinity":null},"env":{"ab":{"config":{"params":[],"experiments":[],"chains":[],"encodedParams":"CgInBxIBAA=="},"triggers":{}},"abV2":{"config":{"paramMap":{"ws_sug_fix":{"value":"0"},"in_editor_title":{"value":"0"},"pc_mou_cre_remove":{"value":"0"},"ws_platform_new":{"value":"0"},"pm_noanonymity_A":{"value":"0"}},"abMap":{}},"triggers":{}},"userAgent":{"Edge":false,"IE":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"iOS":false,"isAppleDevice":false,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Quark":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"WxMiniProgram":false,"BaiduMiniProgram":false,"QQMiniProgram":false,"JDMiniProgram":false,"isWebView":false,"isMiniProgram":false,"origin":"python-requests\u002F2.28.2"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F166359481","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F166359481","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"oppoSearch":false,"baiduSearch":false,"googleSearch":false,"shenma":false,"miniProgram":false,"xiaomi":false,"huaweiSearch":false},"theme":"light","appHeaderTheme":{"current":"normal","disable":true,"normal":{"bgColor":"GBK99A"},"custom":{"bgColor":"GBK99A"}},"enableShortcut":true,"referer":"","xUDId":"","mode":"ssr","conf":{},"xTrafficFreeOrigin":"","ipInfo":{},"logged":false,"vars":{"passThroughHeaders":{}}},"me":{"columnContributions":[]},"label":{},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0}},"recommend":{"recommendTimes":{}}},"explore":{},"levelUpperLimit":10,"mcn":{},"mcnManage":{},"tasks":{},"announcement":{},"creatorsRecommendInfo":{}},"creators":{"common":{"applyStatus":{},"rightsStatus":{}},"bayesDomains":{"status":{},"options":{"topDomains":null,"allDomains":null,"editable":0},"contents":null},"school":{"tabs":[],"contents":[],"banner":null,"entities":{}},"faq":{"tabs":[],"article":{}},"knowledgeIncome":{},"safeguardRights":{},"analytics":{"all":{},"answer":{},"zvideo":{},"article":{},"pin":{},"singleContent":{}},"account":{"growthLevel":{}},"KMResource":{},"training":{},"ToolsQuestion":{"goodatTopics":[]},"ToolsHotspot":{"domains":[]},"ToolsRecommend":{},"ToolsCustomPromotion":{"itemLists":{},"baseInfo":{}},"ToolsSearchQuestion":{},"editorSetting":{},"MCNManage":{},"knowledgeTasks":{},"incomeAnalysis":{"income":{"aggregation":{}}},"creationManage":{"editModal":{"status":false}},"activity":{},"announcement":{},"home":{"currentCreatorUrlToken":null,"rights":[],"newRights":[],"scoreInfo":{},"menusShowControlByServer":{"bVipRecomend":false,"creationRelationship":false},"newTasks":{"creatorTask":{"tasks":[],"des":[]}},"bannerList":[],"recentlyCreated":[],"homecard":{}},"videoSupport":{"textBenefit":{}},"videoDistribution":{},"profilePoster":{"creatorPosterConfig":{},"creatorPosterData":{}}},"answers":{"voters":{},"copyrightApplicants":{},"favlists":{},"newAnswer":{},"entityWords":{},"concernedUpvoters":{},"simpleConcernedUpvoters":{},"paidContent":{},"settings":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{},"concernedUpvoters":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotList":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]},"hotDaily":{"data":[],"paging":{}},"hotHighlight":{"isFetching":false,"isDrained":false,"data":[],"paging":{}},"banner":{},"commercialBanner":{"show":false,"banner":{},"trackData":{}},"video":{"items":[],"next":null,"isLoading":false,"isDrained":false}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"c_1273663489799233536"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[],"contributionInvitation":null},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":0,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"userProfit":{"permission":{"permissionStatus":{"zhiZixuan":0,"recommend":-1,"task":0,"plugin":0,"infinity":0},"visible":false},"linkCardLimit":0},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{},"banners":{},"protocolStatus":{"isAgreedNew":true,"isAgreedOld":true},"probationCountdownDays":0},"zvideos":{"campaignVideoList":{},"campaigns":{},"tagoreCategory":[],"recommendations":{},"insertable":{},"recruit":{"form":{"platform":"","nickname":"","followerCount":"","domain":"","contact":""},"submited":false,"ranking":[]},"qyActivityData":{},"talkActivityData":{},"party2022ActivityData":{},"batchVideos":{},"contribution":{"selectedContribution":null,"campaign":null,"configs":{},"contributionLists":{},"recommendQuestions":{"isLoading":true,"paging":{"isEnd":false,"isStart":true,"totals":0},"data":[]},"questionSearchResults":{"isLoading":true,"paging":{"isEnd":false,"isStart":true,"totals":0},"data":[]}},"creationReferences":{},"zvideoCollection":{},"zvideoGrant":{},"collectData":{"isFetching":false,"list":[]},"videoSource":{"isLoaded":false}},"republish":{},"commentPermission":{},"creatorRightStatus":{"list":[]},"adPromotion":{"answer":{},"article":{}}},"fetchHost":"www.zhihu.com","subAppName":"column","spanName":"Post","canaryConfig":{"test_canary":"0","use_new_player":"0","player_vendor":"0","use_hevc":"0","upload_use_signature":"0","use_backdrop_blur":"0","article_title_imagex":"0","play_station":"0"}}</script><script crossorigin="" src="https://static.zhihu.com/heifetz/vendor.5f3e51e68d56265eb628.js"></script><script crossorigin="" src="https://static.zhihu.com/event/react@17.0.2/umd/react.production.min.js"></script><script crossorigin="" src="https://static.zhihu.com/event/react-dom@17.0.2/umd/react-dom.production.min.js"></script><script crossorigin="" src="https://static.zhihu.com/event/react-dom@17.0.2/umd/react-dom-server.browser.production.min.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/runtime.app.83cbc4140a7118da0625.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-29107295.app.42d07f814b7b05187671.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-79b5cf47.app.8b6b6bf4b6d894db9b07.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-330004dc.app.7437cf54ac28fca0e302.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-0e5ce61e.app.bfc97c459473d6bbad05.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-83b0f42f.app.6bcd41e130a7cc845dab.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-38cf5c11.app.a59df9edceb3cc75ed79.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-2ec050f6.app.c771c7a68c7e37369235.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/4267.app.8b9420f7d7e72e46a561.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/column.app.093c8add3927c849e64b.js"></script><script defer="" src="https://static.zhihu.com/event/wza/4613/aria.js?appid=a3637ace5dc3a347f6863b0bac487599" id="ariascripts" wapForceOldFixed="false" loadData="false"></script></body><script src="https://hm.baidu.com/hm.js?98beee57fd2ef70ccdd5ca52b9740c49" async=""></script></html>