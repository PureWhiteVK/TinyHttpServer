function(to_hex)
    set(options "")
    set(one_value_args VARIABLE LENGTH)
    set(multi_value_args "")
    cmake_parse_arguments(ARGS "${options}" "${one_value_args}" "${multi_value_args}" ${ARGN})
    include(CMakePrintHelpers)
    set(value ${${ARGS_VARIABLE}})
    math(EXPR value ${value} OUTPUT_FORMAT HEXADECIMAL)
    string(TOUPPER ${value} value)
    string(REGEX REPLACE "^(0X)([0123456789ABCDEF]+)$" "\\2" value ${value})
    string(LENGTH ${value} value_length)
    while(value_length LESS ARGS_LENGTH)
        string(PREPEND value "0")
        string(LENGTH ${value} value_length)
    endwhile()
    set(${ARGS_VARIABLE} ${value} PARENT_SCOPE)
endfunction()


function(get_windows_version)
    set(options "")
    set(one_value_args OUTPUT_NAME)
    set(multi_value_args "")
    cmake_parse_arguments(ARGS "${options}" "${one_value_args}" "${multi_value_args}" ${ARGN})
    if(WIN32)
        include(CMakePrintHelpers)
        # regexr concluded from https://www.gaijin.at/en/infos/windows-version-numbers
        if(CMAKE_SYSTEM_VERSION MATCHES "^([0-9]+)\.([0-9]+).*$")
            set(WINDOWS_MAJOR ${CMAKE_MATCH_1})
            set(WINDOWS_MINOR ${CMAKE_MATCH_2})
            to_hex(VARIABLE WINDOWS_MAJOR LENGTH 2)
            to_hex(VARIABLE WINDOWS_MINOR LENGTH 2)
            set(${ARGS_OUTPUT_NAME} "0x${WINDOWS_MAJOR}${WINDOWS_MINOR}" PARENT_SCOPE)
        else()
            message(WARNING "failed to parse windows version ${CMAKE_SYSTEM_VERSION}, skipped.")
        endif()
    else()
        message(WARNING "current system is ${CMAKE_SYSTEM}, not windows, skipped.")
    endif()
endfunction()